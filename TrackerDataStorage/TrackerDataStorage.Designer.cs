//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Me__Appli__5FB337D6", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GTSDataStorage.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_Membership))]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Pa__Appli__619B8048", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GTSDataStorage.aspnet_Applications), "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_Paths))]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Ro__Appli__66603565", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GTSDataStorage.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_Roles))]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Us__Appli__6754599E", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GTSDataStorage.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_Users))]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Me__UserI__60A75C0F", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GTSDataStorage.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GTSDataStorage.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Pe__PathI__628FA481", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GTSDataStorage.aspnet_Paths), "aspnet_PersonalizationAllUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GTSDataStorage.aspnet_PersonalizationAllUsers), true)]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Pe__PathI__6383C8BA", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GTSDataStorage.aspnet_Paths), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_PersonalizationPerUser))]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Pe__UserI__6477ECF3", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GTSDataStorage.aspnet_Users), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_PersonalizationPerUser))]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK__aspnet_Pr__UserI__656C112C", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GTSDataStorage.aspnet_Users), "aspnet_Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GTSDataStorage.aspnet_Profile), true)]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "FK_GeoFences_GeoFencesType", "GeoFenceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GTSDataStorage.GeoFenceType), "GeoFence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.GeoFence))]
[assembly: EdmRelationshipAttribute("GPSTrackerModel", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GTSDataStorage.aspnet_Users))]

#endregion

namespace GTSDataStorage
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GPSTrackerEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GPSTrackerEntities1 object using the connection string found in the 'GPSTrackerEntities1' section of the application configuration file.
        /// </summary>
        public GPSTrackerEntities1() : base("name=GPSTrackerEntities1", "GPSTrackerEntities1")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GPSTrackerEntities1 object.
        /// </summary>
        public GPSTrackerEntities1(string connectionString) : base(connectionString, "GPSTrackerEntities1")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GPSTrackerEntities1 object.
        /// </summary>
        public GPSTrackerEntities1(EntityConnection connection) : base(connection, "GPSTrackerEntities1")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdministrativeUser> AdministrativeUsers
        {
            get
            {
                if ((_AdministrativeUsers == null))
                {
                    _AdministrativeUsers = base.CreateObjectSet<AdministrativeUser>("AdministrativeUsers");
                }
                return _AdministrativeUsers;
            }
        }
        private ObjectSet<AdministrativeUser> _AdministrativeUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlertFired> AlertFireds
        {
            get
            {
                if ((_AlertFireds == null))
                {
                    _AlertFireds = base.CreateObjectSet<AlertFired>("AlertFireds");
                }
                return _AlertFireds;
            }
        }
        private ObjectSet<AlertFired> _AlertFireds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlertLog> AlertLogs
        {
            get
            {
                if ((_AlertLogs == null))
                {
                    _AlertLogs = base.CreateObjectSet<AlertLog>("AlertLogs");
                }
                return _AlertLogs;
            }
        }
        private ObjectSet<AlertLog> _AlertLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Paths> aspnet_Paths
        {
            get
            {
                if ((_aspnet_Paths == null))
                {
                    _aspnet_Paths = base.CreateObjectSet<aspnet_Paths>("aspnet_Paths");
                }
                return _aspnet_Paths;
            }
        }
        private ObjectSet<aspnet_Paths> _aspnet_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
        {
            get
            {
                if ((_aspnet_PersonalizationAllUsers == null))
                {
                    _aspnet_PersonalizationAllUsers = base.CreateObjectSet<aspnet_PersonalizationAllUsers>("aspnet_PersonalizationAllUsers");
                }
                return _aspnet_PersonalizationAllUsers;
            }
        }
        private ObjectSet<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                if ((_aspnet_PersonalizationPerUser == null))
                {
                    _aspnet_PersonalizationPerUser = base.CreateObjectSet<aspnet_PersonalizationPerUser>("aspnet_PersonalizationPerUser");
                }
                return _aspnet_PersonalizationPerUser;
            }
        }
        private ObjectSet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Profile> aspnet_Profile
        {
            get
            {
                if ((_aspnet_Profile == null))
                {
                    _aspnet_Profile = base.CreateObjectSet<aspnet_Profile>("aspnet_Profile");
                }
                return _aspnet_Profile;
            }
        }
        private ObjectSet<aspnet_Profile> _aspnet_Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events
        {
            get
            {
                if ((_aspnet_WebEvent_Events == null))
                {
                    _aspnet_WebEvent_Events = base.CreateObjectSet<aspnet_WebEvent_Events>("aspnet_WebEvent_Events");
                }
                return _aspnet_WebEvent_Events;
            }
        }
        private ObjectSet<aspnet_WebEvent_Events> _aspnet_WebEvent_Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyTrackerUser> CompanyTrackerUsers
        {
            get
            {
                if ((_CompanyTrackerUsers == null))
                {
                    _CompanyTrackerUsers = base.CreateObjectSet<CompanyTrackerUser>("CompanyTrackerUsers");
                }
                return _CompanyTrackerUsers;
            }
        }
        private ObjectSet<CompanyTrackerUser> _CompanyTrackerUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exception> Exceptions
        {
            get
            {
                if ((_Exceptions == null))
                {
                    _Exceptions = base.CreateObjectSet<Exception>("Exceptions");
                }
                return _Exceptions;
            }
        }
        private ObjectSet<Exception> _Exceptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeoFence> GeoFences
        {
            get
            {
                if ((_GeoFences == null))
                {
                    _GeoFences = base.CreateObjectSet<GeoFence>("GeoFences");
                }
                return _GeoFences;
            }
        }
        private ObjectSet<GeoFence> _GeoFences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeoFenceType> GeoFenceTypes
        {
            get
            {
                if ((_GeoFenceTypes == null))
                {
                    _GeoFenceTypes = base.CreateObjectSet<GeoFenceType>("GeoFenceTypes");
                }
                return _GeoFenceTypes;
            }
        }
        private ObjectSet<GeoFenceType> _GeoFenceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupAlert> GroupAlerts
        {
            get
            {
                if ((_GroupAlerts == null))
                {
                    _GroupAlerts = base.CreateObjectSet<GroupAlert>("GroupAlerts");
                }
                return _GroupAlerts;
            }
        }
        private ObjectSet<GroupAlert> _GroupAlerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationMessageAlert> LocationMessageAlerts
        {
            get
            {
                if ((_LocationMessageAlerts == null))
                {
                    _LocationMessageAlerts = base.CreateObjectSet<LocationMessageAlert>("LocationMessageAlerts");
                }
                return _LocationMessageAlerts;
            }
        }
        private ObjectSet<LocationMessageAlert> _LocationMessageAlerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationMessages2> LocationMessages2
        {
            get
            {
                if ((_LocationMessages2 == null))
                {
                    _LocationMessages2 = base.CreateObjectSet<LocationMessages2>("LocationMessages2");
                }
                return _LocationMessages2;
            }
        }
        private ObjectSet<LocationMessages2> _LocationMessages2;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LR_LimerInfo> LR_LimerInfo
        {
            get
            {
                if ((_LR_LimerInfo == null))
                {
                    _LR_LimerInfo = base.CreateObjectSet<LR_LimerInfo>("LR_LimerInfo");
                }
                return _LR_LimerInfo;
            }
        }
        private ObjectSet<LR_LimerInfo> _LR_LimerInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LR_Passcode> LR_Passcode
        {
            get
            {
                if ((_LR_Passcode == null))
                {
                    _LR_Passcode = base.CreateObjectSet<LR_Passcode>("LR_Passcode");
                }
                return _LR_Passcode;
            }
        }
        private ObjectSet<LR_Passcode> _LR_Passcode;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LR_Status> LR_Status
        {
            get
            {
                if ((_LR_Status == null))
                {
                    _LR_Status = base.CreateObjectSet<LR_Status>("LR_Status");
                }
                return _LR_Status;
            }
        }
        private ObjectSet<LR_Status> _LR_Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LR_Vibes> LR_Vibes
        {
            get
            {
                if ((_LR_Vibes == null))
                {
                    _LR_Vibes = base.CreateObjectSet<LR_Vibes>("LR_Vibes");
                }
                return _LR_Vibes;
            }
        }
        private ObjectSet<LR_Vibes> _LR_Vibes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OutputStateType> OutputStateTypes
        {
            get
            {
                if ((_OutputStateTypes == null))
                {
                    _OutputStateTypes = base.CreateObjectSet<OutputStateType>("OutputStateTypes");
                }
                return _OutputStateTypes;
            }
        }
        private ObjectSet<OutputStateType> _OutputStateTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OutputTriggerType> OutputTriggerTypes
        {
            get
            {
                if ((_OutputTriggerTypes == null))
                {
                    _OutputTriggerTypes = base.CreateObjectSet<OutputTriggerType>("OutputTriggerTypes");
                }
                return _OutputTriggerTypes;
            }
        }
        private ObjectSet<OutputTriggerType> _OutputTriggerTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SimCard> SimCards
        {
            get
            {
                if ((_SimCards == null))
                {
                    _SimCards = base.CreateObjectSet<SimCard>("SimCards");
                }
                return _SimCards;
            }
        }
        private ObjectSet<SimCard> _SimCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerFenceMap> TrackerFenceMaps
        {
            get
            {
                if ((_TrackerFenceMaps == null))
                {
                    _TrackerFenceMaps = base.CreateObjectSet<TrackerFenceMap>("TrackerFenceMaps");
                }
                return _TrackerFenceMaps;
            }
        }
        private ObjectSet<TrackerFenceMap> _TrackerFenceMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerLink> TrackerLinks
        {
            get
            {
                if ((_TrackerLinks == null))
                {
                    _TrackerLinks = base.CreateObjectSet<TrackerLink>("TrackerLinks");
                }
                return _TrackerLinks;
            }
        }
        private ObjectSet<TrackerLink> _TrackerLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerOutput> TrackerOutputs
        {
            get
            {
                if ((_TrackerOutputs == null))
                {
                    _TrackerOutputs = base.CreateObjectSet<TrackerOutput>("TrackerOutputs");
                }
                return _TrackerOutputs;
            }
        }
        private ObjectSet<TrackerOutput> _TrackerOutputs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerOutputType> TrackerOutputTypes
        {
            get
            {
                if ((_TrackerOutputTypes == null))
                {
                    _TrackerOutputTypes = base.CreateObjectSet<TrackerOutputType>("TrackerOutputTypes");
                }
                return _TrackerOutputTypes;
            }
        }
        private ObjectSet<TrackerOutputType> _TrackerOutputTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trackers> Trackers
        {
            get
            {
                if ((_Trackers == null))
                {
                    _Trackers = base.CreateObjectSet<Trackers>("Trackers");
                }
                return _Trackers;
            }
        }
        private ObjectSet<Trackers> _Trackers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerSim> TrackerSims
        {
            get
            {
                if ((_TrackerSims == null))
                {
                    _TrackerSims = base.CreateObjectSet<TrackerSim>("TrackerSims");
                }
                return _TrackerSims;
            }
        }
        private ObjectSet<TrackerSim> _TrackerSims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerType> TrackerTypes
        {
            get
            {
                if ((_TrackerTypes == null))
                {
                    _TrackerTypes = base.CreateObjectSet<TrackerType>("TrackerTypes");
                }
                return _TrackerTypes;
            }
        }
        private ObjectSet<TrackerType> _TrackerTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerUser> TrackerUser
        {
            get
            {
                if ((_TrackerUser == null))
                {
                    _TrackerUser = base.CreateObjectSet<TrackerUser>("TrackerUser");
                }
                return _TrackerUser;
            }
        }
        private ObjectSet<TrackerUser> _TrackerUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerVehicle> TrackerVehicles
        {
            get
            {
                if ((_TrackerVehicles == null))
                {
                    _TrackerVehicles = base.CreateObjectSet<TrackerVehicle>("TrackerVehicles");
                }
                return _TrackerVehicles;
            }
        }
        private ObjectSet<TrackerVehicle> _TrackerVehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserFenceMap> UserFenceMaps
        {
            get
            {
                if ((_UserFenceMaps == null))
                {
                    _UserFenceMaps = base.CreateObjectSet<UserFenceMap>("UserFenceMaps");
                }
                return _UserFenceMaps;
            }
        }
        private ObjectSet<UserFenceMap> _UserFenceMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerLinkLevel> TrackerLinkLevels
        {
            get
            {
                if ((_TrackerLinkLevels == null))
                {
                    _TrackerLinkLevels = base.CreateObjectSet<TrackerLinkLevel>("TrackerLinkLevels");
                }
                return _TrackerLinkLevels;
            }
        }
        private ObjectSet<TrackerLinkLevel> _TrackerLinkLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationMessages> LocationMessages
        {
            get
            {
                if ((_LocationMessages == null))
                {
                    _LocationMessages = base.CreateObjectSet<LocationMessages>("LocationMessages");
                }
                return _LocationMessages;
            }
        }
        private ObjectSet<LocationMessages> _LocationMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alert> Alerts
        {
            get
            {
                if ((_Alerts == null))
                {
                    _Alerts = base.CreateObjectSet<Alert>("Alerts");
                }
                return _Alerts;
            }
        }
        private ObjectSet<Alert> _Alerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Maintenance> Maintenance
        {
            get
            {
                if ((_Maintenance == null))
                {
                    _Maintenance = base.CreateObjectSet<Maintenance>("Maintenance");
                }
                return _Maintenance;
            }
        }
        private ObjectSet<Maintenance> _Maintenance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackerCommandLog> TrackerCommandLog
        {
            get
            {
                if ((_TrackerCommandLog == null))
                {
                    _TrackerCommandLog = base.CreateObjectSet<TrackerCommandLog>("TrackerCommandLog");
                }
                return _TrackerCommandLog;
            }
        }
        private ObjectSet<TrackerCommandLog> _TrackerCommandLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Applications> vw_aspnet_Applications
        {
            get
            {
                if ((_vw_aspnet_Applications == null))
                {
                    _vw_aspnet_Applications = base.CreateObjectSet<vw_aspnet_Applications>("vw_aspnet_Applications");
                }
                return _vw_aspnet_Applications;
            }
        }
        private ObjectSet<vw_aspnet_Applications> _vw_aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers
        {
            get
            {
                if ((_vw_aspnet_MembershipUsers == null))
                {
                    _vw_aspnet_MembershipUsers = base.CreateObjectSet<vw_aspnet_MembershipUsers>("vw_aspnet_MembershipUsers");
                }
                return _vw_aspnet_MembershipUsers;
            }
        }
        private ObjectSet<vw_aspnet_MembershipUsers> _vw_aspnet_MembershipUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Profiles> vw_aspnet_Profiles
        {
            get
            {
                if ((_vw_aspnet_Profiles == null))
                {
                    _vw_aspnet_Profiles = base.CreateObjectSet<vw_aspnet_Profiles>("vw_aspnet_Profiles");
                }
                return _vw_aspnet_Profiles;
            }
        }
        private ObjectSet<vw_aspnet_Profiles> _vw_aspnet_Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Roles> vw_aspnet_Roles
        {
            get
            {
                if ((_vw_aspnet_Roles == null))
                {
                    _vw_aspnet_Roles = base.CreateObjectSet<vw_aspnet_Roles>("vw_aspnet_Roles");
                }
                return _vw_aspnet_Roles;
            }
        }
        private ObjectSet<vw_aspnet_Roles> _vw_aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Users> vw_aspnet_Users
        {
            get
            {
                if ((_vw_aspnet_Users == null))
                {
                    _vw_aspnet_Users = base.CreateObjectSet<vw_aspnet_Users>("vw_aspnet_Users");
                }
                return _vw_aspnet_Users;
            }
        }
        private ObjectSet<vw_aspnet_Users> _vw_aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles
        {
            get
            {
                if ((_vw_aspnet_UsersInRoles == null))
                {
                    _vw_aspnet_UsersInRoles = base.CreateObjectSet<vw_aspnet_UsersInRoles>("vw_aspnet_UsersInRoles");
                }
                return _vw_aspnet_UsersInRoles;
            }
        }
        private ObjectSet<vw_aspnet_UsersInRoles> _vw_aspnet_UsersInRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_Paths
        {
            get
            {
                if ((_vw_aspnet_WebPartState_Paths == null))
                {
                    _vw_aspnet_WebPartState_Paths = base.CreateObjectSet<vw_aspnet_WebPartState_Paths>("vw_aspnet_WebPartState_Paths");
                }
                return _vw_aspnet_WebPartState_Paths;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_Paths> _vw_aspnet_WebPartState_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_Shared
        {
            get
            {
                if ((_vw_aspnet_WebPartState_Shared == null))
                {
                    _vw_aspnet_WebPartState_Shared = base.CreateObjectSet<vw_aspnet_WebPartState_Shared>("vw_aspnet_WebPartState_Shared");
                }
                return _vw_aspnet_WebPartState_Shared;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_Shared> _vw_aspnet_WebPartState_Shared;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_User
        {
            get
            {
                if ((_vw_aspnet_WebPartState_User == null))
                {
                    _vw_aspnet_WebPartState_User = base.CreateObjectSet<vw_aspnet_WebPartState_User>("vw_aspnet_WebPartState_User");
                }
                return _vw_aspnet_WebPartState_User;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_User> _vw_aspnet_WebPartState_User;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdministrativeUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministrativeUsers(AdministrativeUser administrativeUser)
        {
            base.AddObject("AdministrativeUsers", administrativeUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlertFireds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlertFireds(AlertFired alertFired)
        {
            base.AddObject("AlertFireds", alertFired);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlertLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlertLogs(AlertLog alertLog)
        {
            base.AddObject("AlertLogs", alertLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Paths(aspnet_Paths aspnet_Paths)
        {
            base.AddObject("aspnet_Paths", aspnet_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationAllUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers)
        {
            base.AddObject("aspnet_PersonalizationAllUsers", aspnet_PersonalizationAllUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationPerUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser)
        {
            base.AddObject("aspnet_PersonalizationPerUser", aspnet_PersonalizationPerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Profile(aspnet_Profile aspnet_Profile)
        {
            base.AddObject("aspnet_Profile", aspnet_Profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_WebEvent_Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_WebEvent_Events(aspnet_WebEvent_Events aspnet_WebEvent_Events)
        {
            base.AddObject("aspnet_WebEvent_Events", aspnet_WebEvent_Events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyTrackerUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyTrackerUsers(CompanyTrackerUser companyTrackerUser)
        {
            base.AddObject("CompanyTrackerUsers", companyTrackerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Exceptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExceptions(Exception exception)
        {
            base.AddObject("Exceptions", exception);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeoFences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeoFences(GeoFence geoFence)
        {
            base.AddObject("GeoFences", geoFence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeoFenceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeoFenceTypes(GeoFenceType geoFenceType)
        {
            base.AddObject("GeoFenceTypes", geoFenceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupAlerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupAlerts(GroupAlert groupAlert)
        {
            base.AddObject("GroupAlerts", groupAlert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationMessageAlerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationMessageAlerts(LocationMessageAlert locationMessageAlert)
        {
            base.AddObject("LocationMessageAlerts", locationMessageAlert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationMessages2 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationMessages2(LocationMessages2 locationMessages2)
        {
            base.AddObject("LocationMessages2", locationMessages2);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LR_LimerInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLR_LimerInfo(LR_LimerInfo lR_LimerInfo)
        {
            base.AddObject("LR_LimerInfo", lR_LimerInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LR_Passcode EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLR_Passcode(LR_Passcode lR_Passcode)
        {
            base.AddObject("LR_Passcode", lR_Passcode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LR_Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLR_Status(LR_Status lR_Status)
        {
            base.AddObject("LR_Status", lR_Status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LR_Vibes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLR_Vibes(LR_Vibes lR_Vibes)
        {
            base.AddObject("LR_Vibes", lR_Vibes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OutputStateTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOutputStateTypes(OutputStateType outputStateType)
        {
            base.AddObject("OutputStateTypes", outputStateType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OutputTriggerTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOutputTriggerTypes(OutputTriggerType outputTriggerType)
        {
            base.AddObject("OutputTriggerTypes", outputTriggerType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SimCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimCards(SimCard simCard)
        {
            base.AddObject("SimCards", simCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerFenceMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerFenceMaps(TrackerFenceMap trackerFenceMap)
        {
            base.AddObject("TrackerFenceMaps", trackerFenceMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerLinks(TrackerLink trackerLink)
        {
            base.AddObject("TrackerLinks", trackerLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerOutputs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerOutputs(TrackerOutput trackerOutput)
        {
            base.AddObject("TrackerOutputs", trackerOutput);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerOutputTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerOutputTypes(TrackerOutputType trackerOutputType)
        {
            base.AddObject("TrackerOutputTypes", trackerOutputType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trackers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackers(Trackers trackers)
        {
            base.AddObject("Trackers", trackers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerSims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerSims(TrackerSim trackerSim)
        {
            base.AddObject("TrackerSims", trackerSim);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerTypes(TrackerType trackerType)
        {
            base.AddObject("TrackerTypes", trackerType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerUser(TrackerUser trackerUser)
        {
            base.AddObject("TrackerUser", trackerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerVehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerVehicles(TrackerVehicle trackerVehicle)
        {
            base.AddObject("TrackerVehicles", trackerVehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserFenceMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserFenceMaps(UserFenceMap userFenceMap)
        {
            base.AddObject("UserFenceMaps", userFenceMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerLinkLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerLinkLevels(TrackerLinkLevel trackerLinkLevel)
        {
            base.AddObject("TrackerLinkLevels", trackerLinkLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationMessages(LocationMessages locationMessages)
        {
            base.AddObject("LocationMessages", locationMessages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlerts(Alert alert)
        {
            base.AddObject("Alerts", alert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Maintenance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaintenance(Maintenance maintenance)
        {
            base.AddObject("Maintenance", maintenance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackerCommandLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackerCommandLog(TrackerCommandLog trackerCommandLog)
        {
            base.AddObject("TrackerCommandLog", trackerCommandLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Applications(vw_aspnet_Applications vw_aspnet_Applications)
        {
            base.AddObject("vw_aspnet_Applications", vw_aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_MembershipUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_MembershipUsers(vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers)
        {
            base.AddObject("vw_aspnet_MembershipUsers", vw_aspnet_MembershipUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Profiles(vw_aspnet_Profiles vw_aspnet_Profiles)
        {
            base.AddObject("vw_aspnet_Profiles", vw_aspnet_Profiles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Roles(vw_aspnet_Roles vw_aspnet_Roles)
        {
            base.AddObject("vw_aspnet_Roles", vw_aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Users(vw_aspnet_Users vw_aspnet_Users)
        {
            base.AddObject("vw_aspnet_Users", vw_aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_UsersInRoles(vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles)
        {
            base.AddObject("vw_aspnet_UsersInRoles", vw_aspnet_UsersInRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_Paths(vw_aspnet_WebPartState_Paths vw_aspnet_WebPartState_Paths)
        {
            base.AddObject("vw_aspnet_WebPartState_Paths", vw_aspnet_WebPartState_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_Shared EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_Shared(vw_aspnet_WebPartState_Shared vw_aspnet_WebPartState_Shared)
        {
            base.AddObject("vw_aspnet_WebPartState_Shared", vw_aspnet_WebPartState_Shared);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_User(vw_aspnet_WebPartState_User vw_aspnet_WebPartState_User)
        {
            base.AddObject("vw_aspnet_WebPartState_User", vw_aspnet_WebPartState_User);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tablesToCheck">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_AnyDataInTables(Nullable<global::System.Int32> tablesToCheck)
        {
            ObjectParameter tablesToCheckParameter;
            if (tablesToCheck.HasValue)
            {
                tablesToCheckParameter = new ObjectParameter("TablesToCheck", tablesToCheck);
            }
            else
            {
                tablesToCheckParameter = new ObjectParameter("TablesToCheck", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_AnyDataInTables", tablesToCheckParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="applicationId">No Metadata Documentation available.</param>
        public int aspnet_Applications_CreateApplication(global::System.String applicationName, ObjectParameter applicationId)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Applications_CreateApplication", applicationNameParameter, applicationId);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="feature">No Metadata Documentation available.</param>
        /// <param name="compatibleSchemaVersion">No Metadata Documentation available.</param>
        public int aspnet_CheckSchemaVersion(global::System.String feature, global::System.String compatibleSchemaVersion)
        {
            ObjectParameter featureParameter;
            if (feature != null)
            {
                featureParameter = new ObjectParameter("Feature", feature);
            }
            else
            {
                featureParameter = new ObjectParameter("Feature", typeof(global::System.String));
            }
    
            ObjectParameter compatibleSchemaVersionParameter;
            if (compatibleSchemaVersion != null)
            {
                compatibleSchemaVersionParameter = new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion);
            }
            else
            {
                compatibleSchemaVersionParameter = new ObjectParameter("CompatibleSchemaVersion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_CheckSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="newPasswordQuestion">No Metadata Documentation available.</param>
        /// <param name="newPasswordAnswer">No Metadata Documentation available.</param>
        public int aspnet_Membership_ChangePasswordQuestionAndAnswer(global::System.String applicationName, global::System.String userName, global::System.String newPasswordQuestion, global::System.String newPasswordAnswer)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordQuestionParameter;
            if (newPasswordQuestion != null)
            {
                newPasswordQuestionParameter = new ObjectParameter("NewPasswordQuestion", newPasswordQuestion);
            }
            else
            {
                newPasswordQuestionParameter = new ObjectParameter("NewPasswordQuestion", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordAnswerParameter;
            if (newPasswordAnswer != null)
            {
                newPasswordAnswerParameter = new ObjectParameter("NewPasswordAnswer", newPasswordAnswer);
            }
            else
            {
                newPasswordAnswerParameter = new ObjectParameter("NewPasswordAnswer", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Membership_ChangePasswordQuestionAndAnswer", applicationNameParameter, userNameParameter, newPasswordQuestionParameter, newPasswordAnswerParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="passwordSalt">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="passwordQuestion">No Metadata Documentation available.</param>
        /// <param name="passwordAnswer">No Metadata Documentation available.</param>
        /// <param name="isApproved">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        /// <param name="createDate">No Metadata Documentation available.</param>
        /// <param name="uniqueEmail">No Metadata Documentation available.</param>
        /// <param name="passwordFormat">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int aspnet_Membership_CreateUser(global::System.String applicationName, global::System.String userName, global::System.String password, global::System.String passwordSalt, global::System.String email, global::System.String passwordQuestion, global::System.String passwordAnswer, Nullable<global::System.Boolean> isApproved, Nullable<global::System.DateTime> currentTimeUtc, Nullable<global::System.DateTime> createDate, Nullable<global::System.Int32> uniqueEmail, Nullable<global::System.Int32> passwordFormat, ObjectParameter userId)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("Password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("Password", typeof(global::System.String));
            }
    
            ObjectParameter passwordSaltParameter;
            if (passwordSalt != null)
            {
                passwordSaltParameter = new ObjectParameter("PasswordSalt", passwordSalt);
            }
            else
            {
                passwordSaltParameter = new ObjectParameter("PasswordSalt", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            ObjectParameter passwordQuestionParameter;
            if (passwordQuestion != null)
            {
                passwordQuestionParameter = new ObjectParameter("PasswordQuestion", passwordQuestion);
            }
            else
            {
                passwordQuestionParameter = new ObjectParameter("PasswordQuestion", typeof(global::System.String));
            }
    
            ObjectParameter passwordAnswerParameter;
            if (passwordAnswer != null)
            {
                passwordAnswerParameter = new ObjectParameter("PasswordAnswer", passwordAnswer);
            }
            else
            {
                passwordAnswerParameter = new ObjectParameter("PasswordAnswer", typeof(global::System.String));
            }
    
            ObjectParameter isApprovedParameter;
            if (isApproved.HasValue)
            {
                isApprovedParameter = new ObjectParameter("IsApproved", isApproved);
            }
            else
            {
                isApprovedParameter = new ObjectParameter("IsApproved", typeof(global::System.Boolean));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter createDateParameter;
            if (createDate.HasValue)
            {
                createDateParameter = new ObjectParameter("CreateDate", createDate);
            }
            else
            {
                createDateParameter = new ObjectParameter("CreateDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter uniqueEmailParameter;
            if (uniqueEmail.HasValue)
            {
                uniqueEmailParameter = new ObjectParameter("UniqueEmail", uniqueEmail);
            }
            else
            {
                uniqueEmailParameter = new ObjectParameter("UniqueEmail", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordFormatParameter;
            if (passwordFormat.HasValue)
            {
                passwordFormatParameter = new ObjectParameter("PasswordFormat", passwordFormat);
            }
            else
            {
                passwordFormatParameter = new ObjectParameter("PasswordFormat", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Membership_CreateUser", applicationNameParameter, userNameParameter, passwordParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, userId);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="emailToMatch">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public int aspnet_Membership_FindUsersByEmail(global::System.String applicationName, global::System.String emailToMatch, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> pageSize)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter emailToMatchParameter;
            if (emailToMatch != null)
            {
                emailToMatchParameter = new ObjectParameter("EmailToMatch", emailToMatch);
            }
            else
            {
                emailToMatchParameter = new ObjectParameter("EmailToMatch", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Membership_FindUsersByEmail", applicationNameParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userNameToMatch">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public int aspnet_Membership_FindUsersByName(global::System.String applicationName, global::System.String userNameToMatch, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> pageSize)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameToMatchParameter;
            if (userNameToMatch != null)
            {
                userNameToMatchParameter = new ObjectParameter("UserNameToMatch", userNameToMatch);
            }
            else
            {
                userNameToMatchParameter = new ObjectParameter("UserNameToMatch", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Membership_FindUsersByName", applicationNameParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public int aspnet_Membership_GetAllUsers(global::System.String applicationName, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> pageSize)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Membership_GetAllUsers", applicationNameParameter, pageIndexParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="minutesSinceLastInActive">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public int aspnet_Membership_GetNumberOfUsersOnline(global::System.String applicationName, Nullable<global::System.Int32> minutesSinceLastInActive, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter minutesSinceLastInActiveParameter;
            if (minutesSinceLastInActive.HasValue)
            {
                minutesSinceLastInActiveParameter = new ObjectParameter("MinutesSinceLastInActive", minutesSinceLastInActive);
            }
            else
            {
                minutesSinceLastInActiveParameter = new ObjectParameter("MinutesSinceLastInActive", typeof(global::System.Int32));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_Membership_GetNumberOfUsersOnline", applicationNameParameter, minutesSinceLastInActiveParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="maxInvalidPasswordAttempts">No Metadata Documentation available.</param>
        /// <param name="passwordAttemptWindow">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        /// <param name="passwordAnswer">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Membership_GetPassword_Result> aspnet_Membership_GetPassword(global::System.String applicationName, global::System.String userName, Nullable<global::System.Int32> maxInvalidPasswordAttempts, Nullable<global::System.Int32> passwordAttemptWindow, Nullable<global::System.DateTime> currentTimeUtc, global::System.String passwordAnswer)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter maxInvalidPasswordAttemptsParameter;
            if (maxInvalidPasswordAttempts.HasValue)
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts);
            }
            else
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("MaxInvalidPasswordAttempts", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordAttemptWindowParameter;
            if (passwordAttemptWindow.HasValue)
            {
                passwordAttemptWindowParameter = new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow);
            }
            else
            {
                passwordAttemptWindowParameter = new ObjectParameter("PasswordAttemptWindow", typeof(global::System.Int32));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter passwordAnswerParameter;
            if (passwordAnswer != null)
            {
                passwordAnswerParameter = new ObjectParameter("PasswordAnswer", passwordAnswer);
            }
            else
            {
                passwordAnswerParameter = new ObjectParameter("PasswordAnswer", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<aspnet_Membership_GetPassword_Result>("aspnet_Membership_GetPassword", applicationNameParameter, userNameParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, passwordAnswerParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="updateLastLoginActivityDate">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Membership_GetPasswordWithFormat_Result> aspnet_Membership_GetPasswordWithFormat(global::System.String applicationName, global::System.String userName, Nullable<global::System.Boolean> updateLastLoginActivityDate, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter updateLastLoginActivityDateParameter;
            if (updateLastLoginActivityDate.HasValue)
            {
                updateLastLoginActivityDateParameter = new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate);
            }
            else
            {
                updateLastLoginActivityDateParameter = new ObjectParameter("UpdateLastLoginActivityDate", typeof(global::System.Boolean));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<aspnet_Membership_GetPasswordWithFormat_Result>("aspnet_Membership_GetPasswordWithFormat", applicationNameParameter, userNameParameter, updateLastLoginActivityDateParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_Membership_GetUserByEmail(global::System.String applicationName, global::System.String email)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_Membership_GetUserByEmail", applicationNameParameter, emailParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        /// <param name="updateLastActivity">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Membership_GetUserByName_Result> aspnet_Membership_GetUserByName(global::System.String applicationName, global::System.String userName, Nullable<global::System.DateTime> currentTimeUtc, Nullable<global::System.Boolean> updateLastActivity)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter updateLastActivityParameter;
            if (updateLastActivity.HasValue)
            {
                updateLastActivityParameter = new ObjectParameter("UpdateLastActivity", updateLastActivity);
            }
            else
            {
                updateLastActivityParameter = new ObjectParameter("UpdateLastActivity", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<aspnet_Membership_GetUserByName_Result>("aspnet_Membership_GetUserByName", applicationNameParameter, userNameParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        /// <param name="updateLastActivity">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Membership_GetUserByUserId_Result> aspnet_Membership_GetUserByUserId(Nullable<global::System.Guid> userId, Nullable<global::System.DateTime> currentTimeUtc, Nullable<global::System.Boolean> updateLastActivity)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter updateLastActivityParameter;
            if (updateLastActivity.HasValue)
            {
                updateLastActivityParameter = new ObjectParameter("UpdateLastActivity", updateLastActivity);
            }
            else
            {
                updateLastActivityParameter = new ObjectParameter("UpdateLastActivity", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<aspnet_Membership_GetUserByUserId_Result>("aspnet_Membership_GetUserByUserId", userIdParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="newPassword">No Metadata Documentation available.</param>
        /// <param name="maxInvalidPasswordAttempts">No Metadata Documentation available.</param>
        /// <param name="passwordAttemptWindow">No Metadata Documentation available.</param>
        /// <param name="passwordSalt">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        /// <param name="passwordFormat">No Metadata Documentation available.</param>
        /// <param name="passwordAnswer">No Metadata Documentation available.</param>
        public int aspnet_Membership_ResetPassword(global::System.String applicationName, global::System.String userName, global::System.String newPassword, Nullable<global::System.Int32> maxInvalidPasswordAttempts, Nullable<global::System.Int32> passwordAttemptWindow, global::System.String passwordSalt, Nullable<global::System.DateTime> currentTimeUtc, Nullable<global::System.Int32> passwordFormat, global::System.String passwordAnswer)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordParameter;
            if (newPassword != null)
            {
                newPasswordParameter = new ObjectParameter("NewPassword", newPassword);
            }
            else
            {
                newPasswordParameter = new ObjectParameter("NewPassword", typeof(global::System.String));
            }
    
            ObjectParameter maxInvalidPasswordAttemptsParameter;
            if (maxInvalidPasswordAttempts.HasValue)
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts);
            }
            else
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("MaxInvalidPasswordAttempts", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordAttemptWindowParameter;
            if (passwordAttemptWindow.HasValue)
            {
                passwordAttemptWindowParameter = new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow);
            }
            else
            {
                passwordAttemptWindowParameter = new ObjectParameter("PasswordAttemptWindow", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordSaltParameter;
            if (passwordSalt != null)
            {
                passwordSaltParameter = new ObjectParameter("PasswordSalt", passwordSalt);
            }
            else
            {
                passwordSaltParameter = new ObjectParameter("PasswordSalt", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter passwordFormatParameter;
            if (passwordFormat.HasValue)
            {
                passwordFormatParameter = new ObjectParameter("PasswordFormat", passwordFormat);
            }
            else
            {
                passwordFormatParameter = new ObjectParameter("PasswordFormat", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordAnswerParameter;
            if (passwordAnswer != null)
            {
                passwordAnswerParameter = new ObjectParameter("PasswordAnswer", passwordAnswer);
            }
            else
            {
                passwordAnswerParameter = new ObjectParameter("PasswordAnswer", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Membership_ResetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter, passwordAnswerParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="newPassword">No Metadata Documentation available.</param>
        /// <param name="passwordSalt">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        /// <param name="passwordFormat">No Metadata Documentation available.</param>
        public int aspnet_Membership_SetPassword(global::System.String applicationName, global::System.String userName, global::System.String newPassword, global::System.String passwordSalt, Nullable<global::System.DateTime> currentTimeUtc, Nullable<global::System.Int32> passwordFormat)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordParameter;
            if (newPassword != null)
            {
                newPasswordParameter = new ObjectParameter("NewPassword", newPassword);
            }
            else
            {
                newPasswordParameter = new ObjectParameter("NewPassword", typeof(global::System.String));
            }
    
            ObjectParameter passwordSaltParameter;
            if (passwordSalt != null)
            {
                passwordSaltParameter = new ObjectParameter("PasswordSalt", passwordSalt);
            }
            else
            {
                passwordSaltParameter = new ObjectParameter("PasswordSalt", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter passwordFormatParameter;
            if (passwordFormat.HasValue)
            {
                passwordFormatParameter = new ObjectParameter("PasswordFormat", passwordFormat);
            }
            else
            {
                passwordFormatParameter = new ObjectParameter("PasswordFormat", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Membership_SetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        public int aspnet_Membership_UnlockUser(global::System.String applicationName, global::System.String userName)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Membership_UnlockUser", applicationNameParameter, userNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        /// <param name="isApproved">No Metadata Documentation available.</param>
        /// <param name="lastLoginDate">No Metadata Documentation available.</param>
        /// <param name="lastActivityDate">No Metadata Documentation available.</param>
        /// <param name="uniqueEmail">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public int aspnet_Membership_UpdateUser(global::System.String applicationName, global::System.String userName, global::System.String email, global::System.String comment, Nullable<global::System.Boolean> isApproved, Nullable<global::System.DateTime> lastLoginDate, Nullable<global::System.DateTime> lastActivityDate, Nullable<global::System.Int32> uniqueEmail, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("Comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("Comment", typeof(global::System.String));
            }
    
            ObjectParameter isApprovedParameter;
            if (isApproved.HasValue)
            {
                isApprovedParameter = new ObjectParameter("IsApproved", isApproved);
            }
            else
            {
                isApprovedParameter = new ObjectParameter("IsApproved", typeof(global::System.Boolean));
            }
    
            ObjectParameter lastLoginDateParameter;
            if (lastLoginDate.HasValue)
            {
                lastLoginDateParameter = new ObjectParameter("LastLoginDate", lastLoginDate);
            }
            else
            {
                lastLoginDateParameter = new ObjectParameter("LastLoginDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter lastActivityDateParameter;
            if (lastActivityDate.HasValue)
            {
                lastActivityDateParameter = new ObjectParameter("LastActivityDate", lastActivityDate);
            }
            else
            {
                lastActivityDateParameter = new ObjectParameter("LastActivityDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter uniqueEmailParameter;
            if (uniqueEmail.HasValue)
            {
                uniqueEmailParameter = new ObjectParameter("UniqueEmail", uniqueEmail);
            }
            else
            {
                uniqueEmailParameter = new ObjectParameter("UniqueEmail", typeof(global::System.Int32));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_Membership_UpdateUser", applicationNameParameter, userNameParameter, emailParameter, commentParameter, isApprovedParameter, lastLoginDateParameter, lastActivityDateParameter, uniqueEmailParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="isPasswordCorrect">No Metadata Documentation available.</param>
        /// <param name="updateLastLoginActivityDate">No Metadata Documentation available.</param>
        /// <param name="maxInvalidPasswordAttempts">No Metadata Documentation available.</param>
        /// <param name="passwordAttemptWindow">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        /// <param name="lastLoginDate">No Metadata Documentation available.</param>
        /// <param name="lastActivityDate">No Metadata Documentation available.</param>
        public int aspnet_Membership_UpdateUserInfo(global::System.String applicationName, global::System.String userName, Nullable<global::System.Boolean> isPasswordCorrect, Nullable<global::System.Boolean> updateLastLoginActivityDate, Nullable<global::System.Int32> maxInvalidPasswordAttempts, Nullable<global::System.Int32> passwordAttemptWindow, Nullable<global::System.DateTime> currentTimeUtc, Nullable<global::System.DateTime> lastLoginDate, Nullable<global::System.DateTime> lastActivityDate)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter isPasswordCorrectParameter;
            if (isPasswordCorrect.HasValue)
            {
                isPasswordCorrectParameter = new ObjectParameter("IsPasswordCorrect", isPasswordCorrect);
            }
            else
            {
                isPasswordCorrectParameter = new ObjectParameter("IsPasswordCorrect", typeof(global::System.Boolean));
            }
    
            ObjectParameter updateLastLoginActivityDateParameter;
            if (updateLastLoginActivityDate.HasValue)
            {
                updateLastLoginActivityDateParameter = new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate);
            }
            else
            {
                updateLastLoginActivityDateParameter = new ObjectParameter("UpdateLastLoginActivityDate", typeof(global::System.Boolean));
            }
    
            ObjectParameter maxInvalidPasswordAttemptsParameter;
            if (maxInvalidPasswordAttempts.HasValue)
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts);
            }
            else
            {
                maxInvalidPasswordAttemptsParameter = new ObjectParameter("MaxInvalidPasswordAttempts", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordAttemptWindowParameter;
            if (passwordAttemptWindow.HasValue)
            {
                passwordAttemptWindowParameter = new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow);
            }
            else
            {
                passwordAttemptWindowParameter = new ObjectParameter("PasswordAttemptWindow", typeof(global::System.Int32));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter lastLoginDateParameter;
            if (lastLoginDate.HasValue)
            {
                lastLoginDateParameter = new ObjectParameter("LastLoginDate", lastLoginDate);
            }
            else
            {
                lastLoginDateParameter = new ObjectParameter("LastLoginDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter lastActivityDateParameter;
            if (lastActivityDate.HasValue)
            {
                lastActivityDateParameter = new ObjectParameter("LastActivityDate", lastActivityDate);
            }
            else
            {
                lastActivityDateParameter = new ObjectParameter("LastActivityDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_Membership_UpdateUserInfo", applicationNameParameter, userNameParameter, isPasswordCorrectParameter, updateLastLoginActivityDateParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, lastLoginDateParameter, lastActivityDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationId">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="pathId">No Metadata Documentation available.</param>
        public int aspnet_Paths_CreatePath(Nullable<global::System.Guid> applicationId, global::System.String path, ObjectParameter pathId)
        {
            ObjectParameter applicationIdParameter;
            if (applicationId.HasValue)
            {
                applicationIdParameter = new ObjectParameter("ApplicationId", applicationId);
            }
            else
            {
                applicationIdParameter = new ObjectParameter("ApplicationId", typeof(global::System.Guid));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Paths_CreatePath", applicationIdParameter, pathParameter, pathId);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="applicationId">No Metadata Documentation available.</param>
        public int aspnet_Personalization_GetApplicationId(global::System.String applicationName, ObjectParameter applicationId)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Personalization_GetApplicationId", applicationNameParameter, applicationId);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="allUsersScope">No Metadata Documentation available.</param>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="count">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationAdministration_DeleteAllState(Nullable<global::System.Boolean> allUsersScope, global::System.String applicationName, ObjectParameter count)
        {
            ObjectParameter allUsersScopeParameter;
            if (allUsersScope.HasValue)
            {
                allUsersScopeParameter = new ObjectParameter("AllUsersScope", allUsersScope);
            }
            else
            {
                allUsersScopeParameter = new ObjectParameter("AllUsersScope", typeof(global::System.Boolean));
            }
    
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationAdministration_DeleteAllState", allUsersScopeParameter, applicationNameParameter, count);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="allUsersScope">No Metadata Documentation available.</param>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="inactiveSinceDate">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationAdministration_FindState(Nullable<global::System.Boolean> allUsersScope, global::System.String applicationName, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> pageSize, global::System.String path, global::System.String userName, Nullable<global::System.DateTime> inactiveSinceDate)
        {
            ObjectParameter allUsersScopeParameter;
            if (allUsersScope.HasValue)
            {
                allUsersScopeParameter = new ObjectParameter("AllUsersScope", allUsersScope);
            }
            else
            {
                allUsersScopeParameter = new ObjectParameter("AllUsersScope", typeof(global::System.Boolean));
            }
    
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter inactiveSinceDateParameter;
            if (inactiveSinceDate.HasValue)
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", inactiveSinceDate);
            }
            else
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationAdministration_FindState", allUsersScopeParameter, applicationNameParameter, pageIndexParameter, pageSizeParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="count">No Metadata Documentation available.</param>
        /// <param name="allUsersScope">No Metadata Documentation available.</param>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="inactiveSinceDate">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationAdministration_GetCountOfState(ObjectParameter count, Nullable<global::System.Boolean> allUsersScope, global::System.String applicationName, global::System.String path, global::System.String userName, Nullable<global::System.DateTime> inactiveSinceDate)
        {
            ObjectParameter allUsersScopeParameter;
            if (allUsersScope.HasValue)
            {
                allUsersScopeParameter = new ObjectParameter("AllUsersScope", allUsersScope);
            }
            else
            {
                allUsersScopeParameter = new ObjectParameter("AllUsersScope", typeof(global::System.Boolean));
            }
    
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter inactiveSinceDateParameter;
            if (inactiveSinceDate.HasValue)
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", inactiveSinceDate);
            }
            else
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationAdministration_GetCountOfState", count, allUsersScopeParameter, applicationNameParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="count">No Metadata Documentation available.</param>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationAdministration_ResetSharedState(ObjectParameter count, global::System.String applicationName, global::System.String path)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationAdministration_ResetSharedState", count, applicationNameParameter, pathParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="count">No Metadata Documentation available.</param>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="inactiveSinceDate">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationAdministration_ResetUserState(ObjectParameter count, global::System.String applicationName, Nullable<global::System.DateTime> inactiveSinceDate, global::System.String userName, global::System.String path)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter inactiveSinceDateParameter;
            if (inactiveSinceDate.HasValue)
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", inactiveSinceDate);
            }
            else
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationAdministration_ResetUserState", count, applicationNameParameter, inactiveSinceDateParameter, userNameParameter, pathParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        public ObjectResult<global::System.Byte[]> aspnet_PersonalizationAllUsers_GetPageSettings(global::System.String applicationName, global::System.String path)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.Byte[]>("aspnet_PersonalizationAllUsers_GetPageSettings", applicationNameParameter, pathParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationAllUsers_ResetPageSettings(global::System.String applicationName, global::System.String path)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationAllUsers_ResetPageSettings", applicationNameParameter, pathParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="pageSettings">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationAllUsers_SetPageSettings(global::System.String applicationName, global::System.String path, global::System.Byte[] pageSettings, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            ObjectParameter pageSettingsParameter;
            if (pageSettings != null)
            {
                pageSettingsParameter = new ObjectParameter("PageSettings", pageSettings);
            }
            else
            {
                pageSettingsParameter = new ObjectParameter("PageSettings", typeof(global::System.Byte[]));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationAllUsers_SetPageSettings", applicationNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public ObjectResult<global::System.Byte[]> aspnet_PersonalizationPerUser_GetPageSettings(global::System.String applicationName, global::System.String userName, global::System.String path, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<global::System.Byte[]>("aspnet_PersonalizationPerUser_GetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationPerUser_ResetPageSettings(global::System.String applicationName, global::System.String userName, global::System.String path, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationPerUser_ResetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="pageSettings">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public int aspnet_PersonalizationPerUser_SetPageSettings(global::System.String applicationName, global::System.String userName, global::System.String path, global::System.Byte[] pageSettings, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("Path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("Path", typeof(global::System.String));
            }
    
            ObjectParameter pageSettingsParameter;
            if (pageSettings != null)
            {
                pageSettingsParameter = new ObjectParameter("PageSettings", pageSettings);
            }
            else
            {
                pageSettingsParameter = new ObjectParameter("PageSettings", typeof(global::System.Byte[]));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_PersonalizationPerUser_SetPageSettings", applicationNameParameter, userNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="profileAuthOptions">No Metadata Documentation available.</param>
        /// <param name="inactiveSinceDate">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> aspnet_Profile_DeleteInactiveProfiles(global::System.String applicationName, Nullable<global::System.Int32> profileAuthOptions, Nullable<global::System.DateTime> inactiveSinceDate)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter profileAuthOptionsParameter;
            if (profileAuthOptions.HasValue)
            {
                profileAuthOptionsParameter = new ObjectParameter("ProfileAuthOptions", profileAuthOptions);
            }
            else
            {
                profileAuthOptionsParameter = new ObjectParameter("ProfileAuthOptions", typeof(global::System.Int32));
            }
    
            ObjectParameter inactiveSinceDateParameter;
            if (inactiveSinceDate.HasValue)
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", inactiveSinceDate);
            }
            else
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("aspnet_Profile_DeleteInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userNames">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> aspnet_Profile_DeleteProfiles(global::System.String applicationName, global::System.String userNames)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNamesParameter;
            if (userNames != null)
            {
                userNamesParameter = new ObjectParameter("UserNames", userNames);
            }
            else
            {
                userNamesParameter = new ObjectParameter("UserNames", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("aspnet_Profile_DeleteProfiles", applicationNameParameter, userNamesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="profileAuthOptions">No Metadata Documentation available.</param>
        /// <param name="inactiveSinceDate">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> aspnet_Profile_GetNumberOfInactiveProfiles(global::System.String applicationName, Nullable<global::System.Int32> profileAuthOptions, Nullable<global::System.DateTime> inactiveSinceDate)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter profileAuthOptionsParameter;
            if (profileAuthOptions.HasValue)
            {
                profileAuthOptionsParameter = new ObjectParameter("ProfileAuthOptions", profileAuthOptions);
            }
            else
            {
                profileAuthOptionsParameter = new ObjectParameter("ProfileAuthOptions", typeof(global::System.Int32));
            }
    
            ObjectParameter inactiveSinceDateParameter;
            if (inactiveSinceDate.HasValue)
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", inactiveSinceDate);
            }
            else
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("aspnet_Profile_GetNumberOfInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="profileAuthOptions">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        /// <param name="userNameToMatch">No Metadata Documentation available.</param>
        /// <param name="inactiveSinceDate">No Metadata Documentation available.</param>
        public int aspnet_Profile_GetProfiles(global::System.String applicationName, Nullable<global::System.Int32> profileAuthOptions, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> pageSize, global::System.String userNameToMatch, Nullable<global::System.DateTime> inactiveSinceDate)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter profileAuthOptionsParameter;
            if (profileAuthOptions.HasValue)
            {
                profileAuthOptionsParameter = new ObjectParameter("ProfileAuthOptions", profileAuthOptions);
            }
            else
            {
                profileAuthOptionsParameter = new ObjectParameter("ProfileAuthOptions", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            ObjectParameter userNameToMatchParameter;
            if (userNameToMatch != null)
            {
                userNameToMatchParameter = new ObjectParameter("UserNameToMatch", userNameToMatch);
            }
            else
            {
                userNameToMatchParameter = new ObjectParameter("UserNameToMatch", typeof(global::System.String));
            }
    
            ObjectParameter inactiveSinceDateParameter;
            if (inactiveSinceDate.HasValue)
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", inactiveSinceDate);
            }
            else
            {
                inactiveSinceDateParameter = new ObjectParameter("InactiveSinceDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_Profile_GetProfiles", applicationNameParameter, profileAuthOptionsParameter, pageIndexParameter, pageSizeParameter, userNameToMatchParameter, inactiveSinceDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Profile_GetProperties_Result> aspnet_Profile_GetProperties(global::System.String applicationName, global::System.String userName, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<aspnet_Profile_GetProperties_Result>("aspnet_Profile_GetProperties", applicationNameParameter, userNameParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="propertyNames">No Metadata Documentation available.</param>
        /// <param name="propertyValuesString">No Metadata Documentation available.</param>
        /// <param name="propertyValuesBinary">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="isUserAnonymous">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public int aspnet_Profile_SetProperties(global::System.String applicationName, global::System.String propertyNames, global::System.String propertyValuesString, global::System.Byte[] propertyValuesBinary, global::System.String userName, Nullable<global::System.Boolean> isUserAnonymous, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter propertyNamesParameter;
            if (propertyNames != null)
            {
                propertyNamesParameter = new ObjectParameter("PropertyNames", propertyNames);
            }
            else
            {
                propertyNamesParameter = new ObjectParameter("PropertyNames", typeof(global::System.String));
            }
    
            ObjectParameter propertyValuesStringParameter;
            if (propertyValuesString != null)
            {
                propertyValuesStringParameter = new ObjectParameter("PropertyValuesString", propertyValuesString);
            }
            else
            {
                propertyValuesStringParameter = new ObjectParameter("PropertyValuesString", typeof(global::System.String));
            }
    
            ObjectParameter propertyValuesBinaryParameter;
            if (propertyValuesBinary != null)
            {
                propertyValuesBinaryParameter = new ObjectParameter("PropertyValuesBinary", propertyValuesBinary);
            }
            else
            {
                propertyValuesBinaryParameter = new ObjectParameter("PropertyValuesBinary", typeof(global::System.Byte[]));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter isUserAnonymousParameter;
            if (isUserAnonymous.HasValue)
            {
                isUserAnonymousParameter = new ObjectParameter("IsUserAnonymous", isUserAnonymous);
            }
            else
            {
                isUserAnonymousParameter = new ObjectParameter("IsUserAnonymous", typeof(global::System.Boolean));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_Profile_SetProperties", applicationNameParameter, propertyNamesParameter, propertyValuesStringParameter, propertyValuesBinaryParameter, userNameParameter, isUserAnonymousParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="feature">No Metadata Documentation available.</param>
        /// <param name="compatibleSchemaVersion">No Metadata Documentation available.</param>
        /// <param name="isCurrentVersion">No Metadata Documentation available.</param>
        /// <param name="removeIncompatibleSchema">No Metadata Documentation available.</param>
        public int aspnet_RegisterSchemaVersion(global::System.String feature, global::System.String compatibleSchemaVersion, Nullable<global::System.Boolean> isCurrentVersion, Nullable<global::System.Boolean> removeIncompatibleSchema)
        {
            ObjectParameter featureParameter;
            if (feature != null)
            {
                featureParameter = new ObjectParameter("Feature", feature);
            }
            else
            {
                featureParameter = new ObjectParameter("Feature", typeof(global::System.String));
            }
    
            ObjectParameter compatibleSchemaVersionParameter;
            if (compatibleSchemaVersion != null)
            {
                compatibleSchemaVersionParameter = new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion);
            }
            else
            {
                compatibleSchemaVersionParameter = new ObjectParameter("CompatibleSchemaVersion", typeof(global::System.String));
            }
    
            ObjectParameter isCurrentVersionParameter;
            if (isCurrentVersion.HasValue)
            {
                isCurrentVersionParameter = new ObjectParameter("IsCurrentVersion", isCurrentVersion);
            }
            else
            {
                isCurrentVersionParameter = new ObjectParameter("IsCurrentVersion", typeof(global::System.Boolean));
            }
    
            ObjectParameter removeIncompatibleSchemaParameter;
            if (removeIncompatibleSchema.HasValue)
            {
                removeIncompatibleSchemaParameter = new ObjectParameter("RemoveIncompatibleSchema", removeIncompatibleSchema);
            }
            else
            {
                removeIncompatibleSchemaParameter = new ObjectParameter("RemoveIncompatibleSchema", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("aspnet_RegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter, isCurrentVersionParameter, removeIncompatibleSchemaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public int aspnet_Roles_CreateRole(global::System.String applicationName, global::System.String roleName)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Roles_CreateRole", applicationNameParameter, roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        /// <param name="deleteOnlyIfRoleIsEmpty">No Metadata Documentation available.</param>
        public int aspnet_Roles_DeleteRole(global::System.String applicationName, global::System.String roleName, Nullable<global::System.Boolean> deleteOnlyIfRoleIsEmpty)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            ObjectParameter deleteOnlyIfRoleIsEmptyParameter;
            if (deleteOnlyIfRoleIsEmpty.HasValue)
            {
                deleteOnlyIfRoleIsEmptyParameter = new ObjectParameter("DeleteOnlyIfRoleIsEmpty", deleteOnlyIfRoleIsEmpty);
            }
            else
            {
                deleteOnlyIfRoleIsEmptyParameter = new ObjectParameter("DeleteOnlyIfRoleIsEmpty", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("aspnet_Roles_DeleteRole", applicationNameParameter, roleNameParameter, deleteOnlyIfRoleIsEmptyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_Roles_GetAllRoles(global::System.String applicationName)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_Roles_GetAllRoles", applicationNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public int aspnet_Roles_RoleExists(global::System.String applicationName, global::System.String roleName)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Roles_RoleExists", applicationNameParameter, roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public int aspnet_Setup_RemoveAllRoleMembers(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Setup_RemoveAllRoleMembers", nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public int aspnet_Setup_RestorePermissions(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Setup_RestorePermissions", nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="feature">No Metadata Documentation available.</param>
        /// <param name="compatibleSchemaVersion">No Metadata Documentation available.</param>
        public int aspnet_UnRegisterSchemaVersion(global::System.String feature, global::System.String compatibleSchemaVersion)
        {
            ObjectParameter featureParameter;
            if (feature != null)
            {
                featureParameter = new ObjectParameter("Feature", feature);
            }
            else
            {
                featureParameter = new ObjectParameter("Feature", typeof(global::System.String));
            }
    
            ObjectParameter compatibleSchemaVersionParameter;
            if (compatibleSchemaVersion != null)
            {
                compatibleSchemaVersionParameter = new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion);
            }
            else
            {
                compatibleSchemaVersionParameter = new ObjectParameter("CompatibleSchemaVersion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_UnRegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationId">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="isUserAnonymous">No Metadata Documentation available.</param>
        /// <param name="lastActivityDate">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int aspnet_Users_CreateUser(Nullable<global::System.Guid> applicationId, global::System.String userName, Nullable<global::System.Boolean> isUserAnonymous, Nullable<global::System.DateTime> lastActivityDate, ObjectParameter userId)
        {
            ObjectParameter applicationIdParameter;
            if (applicationId.HasValue)
            {
                applicationIdParameter = new ObjectParameter("ApplicationId", applicationId);
            }
            else
            {
                applicationIdParameter = new ObjectParameter("ApplicationId", typeof(global::System.Guid));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter isUserAnonymousParameter;
            if (isUserAnonymous.HasValue)
            {
                isUserAnonymousParameter = new ObjectParameter("IsUserAnonymous", isUserAnonymous);
            }
            else
            {
                isUserAnonymousParameter = new ObjectParameter("IsUserAnonymous", typeof(global::System.Boolean));
            }
    
            ObjectParameter lastActivityDateParameter;
            if (lastActivityDate.HasValue)
            {
                lastActivityDateParameter = new ObjectParameter("LastActivityDate", lastActivityDate);
            }
            else
            {
                lastActivityDateParameter = new ObjectParameter("LastActivityDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("aspnet_Users_CreateUser", applicationIdParameter, userNameParameter, isUserAnonymousParameter, lastActivityDateParameter, userId);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="tablesToDeleteFrom">No Metadata Documentation available.</param>
        /// <param name="numTablesDeletedFrom">No Metadata Documentation available.</param>
        public int aspnet_Users_DeleteUser(global::System.String applicationName, global::System.String userName, Nullable<global::System.Int32> tablesToDeleteFrom, ObjectParameter numTablesDeletedFrom)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter tablesToDeleteFromParameter;
            if (tablesToDeleteFrom.HasValue)
            {
                tablesToDeleteFromParameter = new ObjectParameter("TablesToDeleteFrom", tablesToDeleteFrom);
            }
            else
            {
                tablesToDeleteFromParameter = new ObjectParameter("TablesToDeleteFrom", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Users_DeleteUser", applicationNameParameter, userNameParameter, tablesToDeleteFromParameter, numTablesDeletedFrom);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userNames">No Metadata Documentation available.</param>
        /// <param name="roleNames">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_UsersInRoles_AddUsersToRoles(global::System.String applicationName, global::System.String userNames, global::System.String roleNames, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNamesParameter;
            if (userNames != null)
            {
                userNamesParameter = new ObjectParameter("UserNames", userNames);
            }
            else
            {
                userNamesParameter = new ObjectParameter("UserNames", typeof(global::System.String));
            }
    
            ObjectParameter roleNamesParameter;
            if (roleNames != null)
            {
                roleNamesParameter = new ObjectParameter("RoleNames", roleNames);
            }
            else
            {
                roleNamesParameter = new ObjectParameter("RoleNames", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        /// <param name="userNameToMatch">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_UsersInRoles_FindUsersInRole(global::System.String applicationName, global::System.String roleName, global::System.String userNameToMatch)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            ObjectParameter userNameToMatchParameter;
            if (userNameToMatch != null)
            {
                userNameToMatchParameter = new ObjectParameter("UserNameToMatch", userNameToMatch);
            }
            else
            {
                userNameToMatchParameter = new ObjectParameter("UserNameToMatch", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_UsersInRoles_FindUsersInRole", applicationNameParameter, roleNameParameter, userNameToMatchParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_UsersInRoles_GetRolesForUser(global::System.String applicationName, global::System.String userName)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_UsersInRoles_GetRolesForUser", applicationNameParameter, userNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_UsersInRoles_GetUsersInRoles(global::System.String applicationName, global::System.String roleName)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_UsersInRoles_GetUsersInRoles", applicationNameParameter, roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public int aspnet_UsersInRoles_IsUserInRole(global::System.String applicationName, global::System.String userName, global::System.String roleName)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_UsersInRoles_IsUserInRole", applicationNameParameter, userNameParameter, roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userNames">No Metadata Documentation available.</param>
        /// <param name="roleNames">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(global::System.String applicationName, global::System.String userNames, global::System.String roleNames)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNamesParameter;
            if (userNames != null)
            {
                userNamesParameter = new ObjectParameter("UserNames", userNames);
            }
            else
            {
                userNamesParameter = new ObjectParameter("UserNames", typeof(global::System.String));
            }
    
            ObjectParameter roleNamesParameter;
            if (roleNames != null)
            {
                roleNamesParameter = new ObjectParameter("RoleNames", roleNames);
            }
            else
            {
                roleNamesParameter = new ObjectParameter("RoleNames", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="eventId">No Metadata Documentation available.</param>
        /// <param name="eventTimeUtc">No Metadata Documentation available.</param>
        /// <param name="eventTime">No Metadata Documentation available.</param>
        /// <param name="eventType">No Metadata Documentation available.</param>
        /// <param name="eventSequence">No Metadata Documentation available.</param>
        /// <param name="eventOccurrence">No Metadata Documentation available.</param>
        /// <param name="eventCode">No Metadata Documentation available.</param>
        /// <param name="eventDetailCode">No Metadata Documentation available.</param>
        /// <param name="message">No Metadata Documentation available.</param>
        /// <param name="applicationPath">No Metadata Documentation available.</param>
        /// <param name="applicationVirtualPath">No Metadata Documentation available.</param>
        /// <param name="machineName">No Metadata Documentation available.</param>
        /// <param name="requestUrl">No Metadata Documentation available.</param>
        /// <param name="exceptionType">No Metadata Documentation available.</param>
        /// <param name="details">No Metadata Documentation available.</param>
        public int aspnet_WebEvent_LogEvent(global::System.String eventId, Nullable<global::System.DateTime> eventTimeUtc, Nullable<global::System.DateTime> eventTime, global::System.String eventType, Nullable<global::System.Decimal> eventSequence, Nullable<global::System.Decimal> eventOccurrence, Nullable<global::System.Int32> eventCode, Nullable<global::System.Int32> eventDetailCode, global::System.String message, global::System.String applicationPath, global::System.String applicationVirtualPath, global::System.String machineName, global::System.String requestUrl, global::System.String exceptionType, global::System.String details)
        {
            ObjectParameter eventIdParameter;
            if (eventId != null)
            {
                eventIdParameter = new ObjectParameter("EventId", eventId);
            }
            else
            {
                eventIdParameter = new ObjectParameter("EventId", typeof(global::System.String));
            }
    
            ObjectParameter eventTimeUtcParameter;
            if (eventTimeUtc.HasValue)
            {
                eventTimeUtcParameter = new ObjectParameter("EventTimeUtc", eventTimeUtc);
            }
            else
            {
                eventTimeUtcParameter = new ObjectParameter("EventTimeUtc", typeof(global::System.DateTime));
            }
    
            ObjectParameter eventTimeParameter;
            if (eventTime.HasValue)
            {
                eventTimeParameter = new ObjectParameter("EventTime", eventTime);
            }
            else
            {
                eventTimeParameter = new ObjectParameter("EventTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter eventTypeParameter;
            if (eventType != null)
            {
                eventTypeParameter = new ObjectParameter("EventType", eventType);
            }
            else
            {
                eventTypeParameter = new ObjectParameter("EventType", typeof(global::System.String));
            }
    
            ObjectParameter eventSequenceParameter;
            if (eventSequence.HasValue)
            {
                eventSequenceParameter = new ObjectParameter("EventSequence", eventSequence);
            }
            else
            {
                eventSequenceParameter = new ObjectParameter("EventSequence", typeof(global::System.Decimal));
            }
    
            ObjectParameter eventOccurrenceParameter;
            if (eventOccurrence.HasValue)
            {
                eventOccurrenceParameter = new ObjectParameter("EventOccurrence", eventOccurrence);
            }
            else
            {
                eventOccurrenceParameter = new ObjectParameter("EventOccurrence", typeof(global::System.Decimal));
            }
    
            ObjectParameter eventCodeParameter;
            if (eventCode.HasValue)
            {
                eventCodeParameter = new ObjectParameter("EventCode", eventCode);
            }
            else
            {
                eventCodeParameter = new ObjectParameter("EventCode", typeof(global::System.Int32));
            }
    
            ObjectParameter eventDetailCodeParameter;
            if (eventDetailCode.HasValue)
            {
                eventDetailCodeParameter = new ObjectParameter("EventDetailCode", eventDetailCode);
            }
            else
            {
                eventDetailCodeParameter = new ObjectParameter("EventDetailCode", typeof(global::System.Int32));
            }
    
            ObjectParameter messageParameter;
            if (message != null)
            {
                messageParameter = new ObjectParameter("Message", message);
            }
            else
            {
                messageParameter = new ObjectParameter("Message", typeof(global::System.String));
            }
    
            ObjectParameter applicationPathParameter;
            if (applicationPath != null)
            {
                applicationPathParameter = new ObjectParameter("ApplicationPath", applicationPath);
            }
            else
            {
                applicationPathParameter = new ObjectParameter("ApplicationPath", typeof(global::System.String));
            }
    
            ObjectParameter applicationVirtualPathParameter;
            if (applicationVirtualPath != null)
            {
                applicationVirtualPathParameter = new ObjectParameter("ApplicationVirtualPath", applicationVirtualPath);
            }
            else
            {
                applicationVirtualPathParameter = new ObjectParameter("ApplicationVirtualPath", typeof(global::System.String));
            }
    
            ObjectParameter machineNameParameter;
            if (machineName != null)
            {
                machineNameParameter = new ObjectParameter("MachineName", machineName);
            }
            else
            {
                machineNameParameter = new ObjectParameter("MachineName", typeof(global::System.String));
            }
    
            ObjectParameter requestUrlParameter;
            if (requestUrl != null)
            {
                requestUrlParameter = new ObjectParameter("RequestUrl", requestUrl);
            }
            else
            {
                requestUrlParameter = new ObjectParameter("RequestUrl", typeof(global::System.String));
            }
    
            ObjectParameter exceptionTypeParameter;
            if (exceptionType != null)
            {
                exceptionTypeParameter = new ObjectParameter("ExceptionType", exceptionType);
            }
            else
            {
                exceptionTypeParameter = new ObjectParameter("ExceptionType", typeof(global::System.String));
            }
    
            ObjectParameter detailsParameter;
            if (details != null)
            {
                detailsParameter = new ObjectParameter("Details", details);
            }
            else
            {
                detailsParameter = new ObjectParameter("Details", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_WebEvent_LogEvent", eventIdParameter, eventTimeUtcParameter, eventTimeParameter, eventTypeParameter, eventSequenceParameter, eventOccurrenceParameter, eventCodeParameter, eventDetailCodeParameter, messageParameter, applicationPathParameter, applicationVirtualPathParameter, machineNameParameter, requestUrlParameter, exceptionTypeParameter, detailsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="functname">No Metadata Documentation available.</param>
        /// <param name="dllname">No Metadata Documentation available.</param>
        public int sp_addextendedproc(global::System.String functname, global::System.String dllname)
        {
            ObjectParameter functnameParameter;
            if (functname != null)
            {
                functnameParameter = new ObjectParameter("functname", functname);
            }
            else
            {
                functnameParameter = new ObjectParameter("functname", typeof(global::System.String));
            }
    
            ObjectParameter dllnameParameter;
            if (dllname != null)
            {
                dllnameParameter = new ObjectParameter("dllname", dllname);
            }
            else
            {
                dllnameParameter = new ObjectParameter("dllname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_addextendedproc", functnameParameter, dllnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="functname">No Metadata Documentation available.</param>
        public int sp_dropextendedproc(global::System.String functname)
        {
            ObjectParameter functnameParameter;
            if (functname != null)
            {
                functnameParameter = new ObjectParameter("functname", functname);
            }
            else
            {
                functnameParameter = new ObjectParameter("functname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_dropextendedproc", functnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int usp_LocationMessagesDelete(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_LocationMessagesDelete", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="rawTextData">No Metadata Documentation available.</param>
        /// <param name="latDegrees">No Metadata Documentation available.</param>
        /// <param name="latMinutes">No Metadata Documentation available.</param>
        /// <param name="latSeconds">No Metadata Documentation available.</param>
        /// <param name="lngDegrees">No Metadata Documentation available.</param>
        /// <param name="lngMinutes">No Metadata Documentation available.</param>
        /// <param name="lngSeconds">No Metadata Documentation available.</param>
        /// <param name="serverTime">No Metadata Documentation available.</param>
        /// <param name="trackerId">No Metadata Documentation available.</param>
        /// <param name="latitudeHeading">No Metadata Documentation available.</param>
        /// <param name="longitudeHeading">No Metadata Documentation available.</param>
        /// <param name="speed">No Metadata Documentation available.</param>
        /// <param name="idleTime">No Metadata Documentation available.</param>
        /// <param name="direction">No Metadata Documentation available.</param>
        public ObjectResult<usp_LocationMessagesInsert_Result> usp_LocationMessagesInsert(global::System.String rawTextData, Nullable<global::System.Int32> latDegrees, Nullable<global::System.Int32> latMinutes, Nullable<global::System.Double> latSeconds, Nullable<global::System.Int32> lngDegrees, Nullable<global::System.Int32> lngMinutes, Nullable<global::System.Double> lngSeconds, Nullable<global::System.DateTime> serverTime, global::System.String trackerId, global::System.String latitudeHeading, global::System.String longitudeHeading, Nullable<global::System.Int32> speed, Nullable<global::System.Int64> idleTime, global::System.String direction)
        {
            ObjectParameter rawTextDataParameter;
            if (rawTextData != null)
            {
                rawTextDataParameter = new ObjectParameter("RawTextData", rawTextData);
            }
            else
            {
                rawTextDataParameter = new ObjectParameter("RawTextData", typeof(global::System.String));
            }
    
            ObjectParameter latDegreesParameter;
            if (latDegrees.HasValue)
            {
                latDegreesParameter = new ObjectParameter("LatDegrees", latDegrees);
            }
            else
            {
                latDegreesParameter = new ObjectParameter("LatDegrees", typeof(global::System.Int32));
            }
    
            ObjectParameter latMinutesParameter;
            if (latMinutes.HasValue)
            {
                latMinutesParameter = new ObjectParameter("LatMinutes", latMinutes);
            }
            else
            {
                latMinutesParameter = new ObjectParameter("LatMinutes", typeof(global::System.Int32));
            }
    
            ObjectParameter latSecondsParameter;
            if (latSeconds.HasValue)
            {
                latSecondsParameter = new ObjectParameter("LatSeconds", latSeconds);
            }
            else
            {
                latSecondsParameter = new ObjectParameter("LatSeconds", typeof(global::System.Double));
            }
    
            ObjectParameter lngDegreesParameter;
            if (lngDegrees.HasValue)
            {
                lngDegreesParameter = new ObjectParameter("LngDegrees", lngDegrees);
            }
            else
            {
                lngDegreesParameter = new ObjectParameter("LngDegrees", typeof(global::System.Int32));
            }
    
            ObjectParameter lngMinutesParameter;
            if (lngMinutes.HasValue)
            {
                lngMinutesParameter = new ObjectParameter("LngMinutes", lngMinutes);
            }
            else
            {
                lngMinutesParameter = new ObjectParameter("LngMinutes", typeof(global::System.Int32));
            }
    
            ObjectParameter lngSecondsParameter;
            if (lngSeconds.HasValue)
            {
                lngSecondsParameter = new ObjectParameter("LngSeconds", lngSeconds);
            }
            else
            {
                lngSecondsParameter = new ObjectParameter("LngSeconds", typeof(global::System.Double));
            }
    
            ObjectParameter serverTimeParameter;
            if (serverTime.HasValue)
            {
                serverTimeParameter = new ObjectParameter("ServerTime", serverTime);
            }
            else
            {
                serverTimeParameter = new ObjectParameter("ServerTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter trackerIdParameter;
            if (trackerId != null)
            {
                trackerIdParameter = new ObjectParameter("TrackerId", trackerId);
            }
            else
            {
                trackerIdParameter = new ObjectParameter("TrackerId", typeof(global::System.String));
            }
    
            ObjectParameter latitudeHeadingParameter;
            if (latitudeHeading != null)
            {
                latitudeHeadingParameter = new ObjectParameter("LatitudeHeading", latitudeHeading);
            }
            else
            {
                latitudeHeadingParameter = new ObjectParameter("LatitudeHeading", typeof(global::System.String));
            }
    
            ObjectParameter longitudeHeadingParameter;
            if (longitudeHeading != null)
            {
                longitudeHeadingParameter = new ObjectParameter("LongitudeHeading", longitudeHeading);
            }
            else
            {
                longitudeHeadingParameter = new ObjectParameter("LongitudeHeading", typeof(global::System.String));
            }
    
            ObjectParameter speedParameter;
            if (speed.HasValue)
            {
                speedParameter = new ObjectParameter("Speed", speed);
            }
            else
            {
                speedParameter = new ObjectParameter("Speed", typeof(global::System.Int32));
            }
    
            ObjectParameter idleTimeParameter;
            if (idleTime.HasValue)
            {
                idleTimeParameter = new ObjectParameter("IdleTime", idleTime);
            }
            else
            {
                idleTimeParameter = new ObjectParameter("IdleTime", typeof(global::System.Int64));
            }
    
            ObjectParameter directionParameter;
            if (direction != null)
            {
                directionParameter = new ObjectParameter("Direction", direction);
            }
            else
            {
                directionParameter = new ObjectParameter("Direction", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_LocationMessagesInsert_Result>("usp_LocationMessagesInsert", rawTextDataParameter, latDegreesParameter, latMinutesParameter, latSecondsParameter, lngDegreesParameter, lngMinutesParameter, lngSecondsParameter, serverTimeParameter, trackerIdParameter, latitudeHeadingParameter, longitudeHeadingParameter, speedParameter, idleTimeParameter, directionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public ObjectResult<usp_LocationMessagesSelect_Result> usp_LocationMessagesSelect(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<usp_LocationMessagesSelect_Result>("usp_LocationMessagesSelect", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="rawTextData">No Metadata Documentation available.</param>
        /// <param name="latDegrees">No Metadata Documentation available.</param>
        /// <param name="latMinutes">No Metadata Documentation available.</param>
        /// <param name="latSeconds">No Metadata Documentation available.</param>
        /// <param name="lngDegrees">No Metadata Documentation available.</param>
        /// <param name="lngMinutes">No Metadata Documentation available.</param>
        /// <param name="lngSeconds">No Metadata Documentation available.</param>
        /// <param name="serverTime">No Metadata Documentation available.</param>
        /// <param name="trackerId">No Metadata Documentation available.</param>
        /// <param name="latitudeHeading">No Metadata Documentation available.</param>
        /// <param name="longitudeHeading">No Metadata Documentation available.</param>
        /// <param name="speed">No Metadata Documentation available.</param>
        /// <param name="idleTime">No Metadata Documentation available.</param>
        /// <param name="direction">No Metadata Documentation available.</param>
        public ObjectResult<usp_LocationMessagesUpdate_Result> usp_LocationMessagesUpdate(Nullable<global::System.Int32> id, global::System.String rawTextData, Nullable<global::System.Int32> latDegrees, Nullable<global::System.Int32> latMinutes, Nullable<global::System.Double> latSeconds, Nullable<global::System.Int32> lngDegrees, Nullable<global::System.Int32> lngMinutes, Nullable<global::System.Double> lngSeconds, Nullable<global::System.DateTime> serverTime, global::System.String trackerId, global::System.String latitudeHeading, global::System.String longitudeHeading, Nullable<global::System.Int32> speed, Nullable<global::System.Int64> idleTime, global::System.String direction)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter rawTextDataParameter;
            if (rawTextData != null)
            {
                rawTextDataParameter = new ObjectParameter("RawTextData", rawTextData);
            }
            else
            {
                rawTextDataParameter = new ObjectParameter("RawTextData", typeof(global::System.String));
            }
    
            ObjectParameter latDegreesParameter;
            if (latDegrees.HasValue)
            {
                latDegreesParameter = new ObjectParameter("LatDegrees", latDegrees);
            }
            else
            {
                latDegreesParameter = new ObjectParameter("LatDegrees", typeof(global::System.Int32));
            }
    
            ObjectParameter latMinutesParameter;
            if (latMinutes.HasValue)
            {
                latMinutesParameter = new ObjectParameter("LatMinutes", latMinutes);
            }
            else
            {
                latMinutesParameter = new ObjectParameter("LatMinutes", typeof(global::System.Int32));
            }
    
            ObjectParameter latSecondsParameter;
            if (latSeconds.HasValue)
            {
                latSecondsParameter = new ObjectParameter("LatSeconds", latSeconds);
            }
            else
            {
                latSecondsParameter = new ObjectParameter("LatSeconds", typeof(global::System.Double));
            }
    
            ObjectParameter lngDegreesParameter;
            if (lngDegrees.HasValue)
            {
                lngDegreesParameter = new ObjectParameter("LngDegrees", lngDegrees);
            }
            else
            {
                lngDegreesParameter = new ObjectParameter("LngDegrees", typeof(global::System.Int32));
            }
    
            ObjectParameter lngMinutesParameter;
            if (lngMinutes.HasValue)
            {
                lngMinutesParameter = new ObjectParameter("LngMinutes", lngMinutes);
            }
            else
            {
                lngMinutesParameter = new ObjectParameter("LngMinutes", typeof(global::System.Int32));
            }
    
            ObjectParameter lngSecondsParameter;
            if (lngSeconds.HasValue)
            {
                lngSecondsParameter = new ObjectParameter("LngSeconds", lngSeconds);
            }
            else
            {
                lngSecondsParameter = new ObjectParameter("LngSeconds", typeof(global::System.Double));
            }
    
            ObjectParameter serverTimeParameter;
            if (serverTime.HasValue)
            {
                serverTimeParameter = new ObjectParameter("ServerTime", serverTime);
            }
            else
            {
                serverTimeParameter = new ObjectParameter("ServerTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter trackerIdParameter;
            if (trackerId != null)
            {
                trackerIdParameter = new ObjectParameter("TrackerId", trackerId);
            }
            else
            {
                trackerIdParameter = new ObjectParameter("TrackerId", typeof(global::System.String));
            }
    
            ObjectParameter latitudeHeadingParameter;
            if (latitudeHeading != null)
            {
                latitudeHeadingParameter = new ObjectParameter("LatitudeHeading", latitudeHeading);
            }
            else
            {
                latitudeHeadingParameter = new ObjectParameter("LatitudeHeading", typeof(global::System.String));
            }
    
            ObjectParameter longitudeHeadingParameter;
            if (longitudeHeading != null)
            {
                longitudeHeadingParameter = new ObjectParameter("LongitudeHeading", longitudeHeading);
            }
            else
            {
                longitudeHeadingParameter = new ObjectParameter("LongitudeHeading", typeof(global::System.String));
            }
    
            ObjectParameter speedParameter;
            if (speed.HasValue)
            {
                speedParameter = new ObjectParameter("Speed", speed);
            }
            else
            {
                speedParameter = new ObjectParameter("Speed", typeof(global::System.Int32));
            }
    
            ObjectParameter idleTimeParameter;
            if (idleTime.HasValue)
            {
                idleTimeParameter = new ObjectParameter("IdleTime", idleTime);
            }
            else
            {
                idleTimeParameter = new ObjectParameter("IdleTime", typeof(global::System.Int64));
            }
    
            ObjectParameter directionParameter;
            if (direction != null)
            {
                directionParameter = new ObjectParameter("Direction", direction);
            }
            else
            {
                directionParameter = new ObjectParameter("Direction", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_LocationMessagesUpdate_Result>("usp_LocationMessagesUpdate", idParameter, rawTextDataParameter, latDegreesParameter, latMinutesParameter, latSecondsParameter, lngDegreesParameter, lngMinutesParameter, lngSecondsParameter, serverTimeParameter, trackerIdParameter, latitudeHeadingParameter, longitudeHeadingParameter, speedParameter, idleTimeParameter, directionParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="AdministrativeUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdministrativeUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdministrativeUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="clearanceLevel">Initial value of the ClearanceLevel property.</param>
        public static AdministrativeUser CreateAdministrativeUser(global::System.Int32 id, global::System.Guid userId, global::System.Int32 clearanceLevel)
        {
            AdministrativeUser administrativeUser = new AdministrativeUser();
            administrativeUser.Id = id;
            administrativeUser.UserId = userId;
            administrativeUser.ClearanceLevel = clearanceLevel;
            return administrativeUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClearanceLevel
        {
            get
            {
                return _ClearanceLevel;
            }
            set
            {
                OnClearanceLevelChanging(value);
                ReportPropertyChanging("ClearanceLevel");
                _ClearanceLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClearanceLevel");
                OnClearanceLevelChanged();
            }
        }
        private global::System.Int32 _ClearanceLevel;
        partial void OnClearanceLevelChanging(global::System.Int32 value);
        partial void OnClearanceLevelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Alert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alert object.
        /// </summary>
        /// <param name="alertId">Initial value of the AlertId property.</param>
        /// <param name="alertName">Initial value of the AlertName property.</param>
        public static Alert CreateAlert(global::System.Int32 alertId, global::System.String alertName)
        {
            Alert alert = new Alert();
            alert.AlertId = alertId;
            alert.AlertName = alertName;
            return alert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertId
        {
            get
            {
                return _AlertId;
            }
            set
            {
                if (_AlertId != value)
                {
                    OnAlertIdChanging(value);
                    ReportPropertyChanging("AlertId");
                    _AlertId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlertId");
                    OnAlertIdChanged();
                }
            }
        }
        private global::System.Int32 _AlertId;
        partial void OnAlertIdChanging(global::System.Int32 value);
        partial void OnAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlertName
        {
            get
            {
                return _AlertName;
            }
            set
            {
                OnAlertNameChanging(value);
                ReportPropertyChanging("AlertName");
                _AlertName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AlertName");
                OnAlertNameChanged();
            }
        }
        private global::System.String _AlertName;
        partial void OnAlertNameChanging(global::System.String value);
        partial void OnAlertNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AlertOnGeofenceEnter
        {
            get
            {
                return _AlertOnGeofenceEnter;
            }
            set
            {
                OnAlertOnGeofenceEnterChanging(value);
                ReportPropertyChanging("AlertOnGeofenceEnter");
                _AlertOnGeofenceEnter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertOnGeofenceEnter");
                OnAlertOnGeofenceEnterChanged();
            }
        }
        private Nullable<global::System.Boolean> _AlertOnGeofenceEnter;
        partial void OnAlertOnGeofenceEnterChanging(Nullable<global::System.Boolean> value);
        partial void OnAlertOnGeofenceEnterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AlertOnGeofenceLeave
        {
            get
            {
                return _AlertOnGeofenceLeave;
            }
            set
            {
                OnAlertOnGeofenceLeaveChanging(value);
                ReportPropertyChanging("AlertOnGeofenceLeave");
                _AlertOnGeofenceLeave = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertOnGeofenceLeave");
                OnAlertOnGeofenceLeaveChanged();
            }
        }
        private Nullable<global::System.Boolean> _AlertOnGeofenceLeave;
        partial void OnAlertOnGeofenceLeaveChanging(Nullable<global::System.Boolean> value);
        partial void OnAlertOnGeofenceLeaveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AlertOnLowBattery
        {
            get
            {
                return _AlertOnLowBattery;
            }
            set
            {
                OnAlertOnLowBatteryChanging(value);
                ReportPropertyChanging("AlertOnLowBattery");
                _AlertOnLowBattery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertOnLowBattery");
                OnAlertOnLowBatteryChanged();
            }
        }
        private Nullable<global::System.Boolean> _AlertOnLowBattery;
        partial void OnAlertOnLowBatteryChanging(Nullable<global::System.Boolean> value);
        partial void OnAlertOnLowBatteryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AlertOnAlarm
        {
            get
            {
                return _AlertOnAlarm;
            }
            set
            {
                OnAlertOnAlarmChanging(value);
                ReportPropertyChanging("AlertOnAlarm");
                _AlertOnAlarm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertOnAlarm");
                OnAlertOnAlarmChanged();
            }
        }
        private Nullable<global::System.Boolean> _AlertOnAlarm;
        partial void OnAlertOnAlarmChanging(Nullable<global::System.Boolean> value);
        partial void OnAlertOnAlarmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SmsAlert
        {
            get
            {
                return _SmsAlert;
            }
            set
            {
                OnSmsAlertChanging(value);
                ReportPropertyChanging("SmsAlert");
                _SmsAlert = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SmsAlert");
                OnSmsAlertChanged();
            }
        }
        private Nullable<global::System.Boolean> _SmsAlert;
        partial void OnSmsAlertChanging(Nullable<global::System.Boolean> value);
        partial void OnSmsAlertChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EmailAlert
        {
            get
            {
                return _EmailAlert;
            }
            set
            {
                OnEmailAlertChanging(value);
                ReportPropertyChanging("EmailAlert");
                _EmailAlert = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailAlert");
                OnEmailAlertChanged();
            }
        }
        private Nullable<global::System.Boolean> _EmailAlert;
        partial void OnEmailAlertChanging(Nullable<global::System.Boolean> value);
        partial void OnEmailAlertChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PushNotification
        {
            get
            {
                return _PushNotification;
            }
            set
            {
                OnPushNotificationChanging(value);
                ReportPropertyChanging("PushNotification");
                _PushNotification = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PushNotification");
                OnPushNotificationChanged();
            }
        }
        private Nullable<global::System.Boolean> _PushNotification;
        partial void OnPushNotificationChanging(Nullable<global::System.Boolean> value);
        partial void OnPushNotificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="AlertFired")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlertFired : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlertFired object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="messageAlertId">Initial value of the MessageAlertId property.</param>
        public static AlertFired CreateAlertFired(global::System.Int32 id, global::System.Int64 messageAlertId)
        {
            AlertFired alertFired = new AlertFired();
            alertFired.Id = id;
            alertFired.MessageAlertId = messageAlertId;
            return alertFired;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnter
        {
            get
            {
                return _IsEnter;
            }
            set
            {
                OnIsEnterChanging(value);
                ReportPropertyChanging("IsEnter");
                _IsEnter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnter");
                OnIsEnterChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnter;
        partial void OnIsEnterChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsExit
        {
            get
            {
                return _IsExit;
            }
            set
            {
                OnIsExitChanging(value);
                ReportPropertyChanging("IsExit");
                _IsExit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExit");
                OnIsExitChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsExit;
        partial void OnIsExitChanging(Nullable<global::System.Boolean> value);
        partial void OnIsExitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AlertId
        {
            get
            {
                return _AlertId;
            }
            set
            {
                OnAlertIdChanging(value);
                ReportPropertyChanging("AlertId");
                _AlertId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertId");
                OnAlertIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AlertId;
        partial void OnAlertIdChanging(Nullable<global::System.Int32> value);
        partial void OnAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FenceId
        {
            get
            {
                return _FenceId;
            }
            set
            {
                OnFenceIdChanging(value);
                ReportPropertyChanging("FenceId");
                _FenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FenceId");
                OnFenceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FenceId;
        partial void OnFenceIdChanging(Nullable<global::System.Int32> value);
        partial void OnFenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MessageAlertId
        {
            get
            {
                return _MessageAlertId;
            }
            set
            {
                OnMessageAlertIdChanging(value);
                ReportPropertyChanging("MessageAlertId");
                _MessageAlertId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageAlertId");
                OnMessageAlertIdChanged();
            }
        }
        private global::System.Int64 _MessageAlertId;
        partial void OnMessageAlertIdChanging(global::System.Int64 value);
        partial void OnMessageAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationMessageId
        {
            get
            {
                return _LocationMessageId;
            }
            set
            {
                OnLocationMessageIdChanging(value);
                ReportPropertyChanging("LocationMessageId");
                _LocationMessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationMessageId");
                OnLocationMessageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationMessageId;
        partial void OnLocationMessageIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationMessageIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="AlertLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlertLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlertLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static AlertLog CreateAlertLog(global::System.Int32 id)
        {
            AlertLog alertLog = new AlertLog();
            alertLog.Id = id;
            return alertLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MessageAlertId
        {
            get
            {
                return _MessageAlertId;
            }
            set
            {
                OnMessageAlertIdChanging(value);
                ReportPropertyChanging("MessageAlertId");
                _MessageAlertId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageAlertId");
                OnMessageAlertIdChanged();
            }
        }
        private Nullable<global::System.Int64> _MessageAlertId;
        partial void OnMessageAlertIdChanging(Nullable<global::System.Int64> value);
        partial void OnMessageAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AlertId
        {
            get
            {
                return _AlertId;
            }
            set
            {
                OnAlertIdChanging(value);
                ReportPropertyChanging("AlertId");
                _AlertId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertId");
                OnAlertIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AlertId;
        partial void OnAlertIdChanging(Nullable<global::System.Int32> value);
        partial void OnAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FenceId
        {
            get
            {
                return _FenceId;
            }
            set
            {
                OnFenceIdChanging(value);
                ReportPropertyChanging("FenceId");
                _FenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FenceId");
                OnFenceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FenceId;
        partial void OnFenceIdChanging(Nullable<global::System.Int32> value);
        partial void OnFenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Success
        {
            get
            {
                return _Success;
            }
            set
            {
                OnSuccessChanging(value);
                ReportPropertyChanging("Success");
                _Success = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Success");
                OnSuccessChanged();
            }
        }
        private Nullable<global::System.Boolean> _Success;
        partial void OnSuccessChanging(Nullable<global::System.Boolean> value);
        partial void OnSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Me__Appli__5FB337D6", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("GPSTrackerModel.FK__aspnet_Me__Appli__5FB337D6", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("GPSTrackerModel.FK__aspnet_Me__Appli__5FB337D6", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pa__Appli__619B8048", "aspnet_Paths")]
        public EntityCollection<aspnet_Paths> aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pa__Appli__619B8048", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pa__Appli__619B8048", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Ro__Appli__66603565", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("GPSTrackerModel.FK__aspnet_Ro__Appli__66603565", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("GPSTrackerModel.FK__aspnet_Ro__Appli__66603565", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Us__Appli__6754599E", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("GPSTrackerModel.FK__aspnet_Us__Appli__6754599E", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("GPSTrackerModel.FK__aspnet_Us__Appli__6754599E", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Me__Appli__5FB337D6", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Me__Appli__5FB337D6", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Me__Appli__5FB337D6", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Me__Appli__5FB337D6", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Me__Appli__5FB337D6", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Me__UserI__60A75C0F", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Paths object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static aspnet_Paths Createaspnet_Paths(global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            aspnet_Paths aspnet_Paths = new aspnet_Paths();
            aspnet_Paths.PathId = pathId;
            aspnet_Paths.Path = path;
            aspnet_Paths.LoweredPath = loweredPath;
            return aspnet_Paths;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                OnLoweredPathChanging(value);
                ReportPropertyChanging("LoweredPath");
                _LoweredPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredPath");
                OnLoweredPathChanged();
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pa__Appli__619B8048", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Pa__Appli__619B8048", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Pa__Appli__619B8048", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Pa__Appli__619B8048", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Pa__Appli__619B8048", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pe__PathI__628FA481", "aspnet_PersonalizationAllUsers")]
        public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_PersonalizationAllUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_PersonalizationAllUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_PersonalizationAllUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_PersonalizationAllUsers>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_PersonalizationAllUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pe__PathI__6383C8BA", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("GPSTrackerModel.FK__aspnet_Pe__PathI__6383C8BA", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("GPSTrackerModel.FK__aspnet_Pe__PathI__6383C8BA", "aspnet_PersonalizationPerUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_PersonalizationAllUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationAllUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationAllUsers object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationAllUsers Createaspnet_PersonalizationAllUsers(global::System.Guid pathId, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers = new aspnet_PersonalizationAllUsers();
            aspnet_PersonalizationAllUsers.PathId = pathId;
            aspnet_PersonalizationAllUsers.PageSettings = pageSettings;
            aspnet_PersonalizationAllUsers.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationAllUsers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pe__PathI__628FA481", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__628FA481", "aspnet_Paths", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_PersonalizationPerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationPerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationPerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationPerUser Createaspnet_PersonalizationPerUser(global::System.Guid id, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser = new aspnet_PersonalizationPerUser();
            aspnet_PersonalizationPerUser.Id = id;
            aspnet_PersonalizationPerUser.PageSettings = pageSettings;
            aspnet_PersonalizationPerUser.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationPerUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pe__PathI__6383C8BA", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__6383C8BA", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__6383C8BA", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__6383C8BA", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("GPSTrackerModel.FK__aspnet_Pe__PathI__6383C8BA", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pe__UserI__6477ECF3", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pe__UserI__6477ECF3", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pe__UserI__6477ECF3", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pe__UserI__6477ECF3", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pe__UserI__6477ECF3", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Profile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValuesString">Initial value of the PropertyValuesString property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_Profile Createaspnet_Profile(global::System.Guid userId, global::System.String propertyNames, global::System.String propertyValuesString, global::System.DateTime lastUpdatedDate)
        {
            aspnet_Profile aspnet_Profile = new aspnet_Profile();
            aspnet_Profile.UserId = userId;
            aspnet_Profile.PropertyNames = propertyNames;
            aspnet_Profile.PropertyValuesString = propertyValuesString;
            aspnet_Profile.LastUpdatedDate = lastUpdatedDate;
            return aspnet_Profile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValuesString
        {
            get
            {
                return _PropertyValuesString;
            }
            set
            {
                OnPropertyValuesStringChanging(value);
                ReportPropertyChanging("PropertyValuesString");
                _PropertyValuesString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesString");
                OnPropertyValuesStringChanged();
            }
        }
        private global::System.String _PropertyValuesString;
        partial void OnPropertyValuesStringChanging(global::System.String value);
        partial void OnPropertyValuesStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValuesBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValuesBinary);
            }
            set
            {
                OnPropertyValuesBinaryChanging(value);
                ReportPropertyChanging("PropertyValuesBinary");
                _PropertyValuesBinary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PropertyValuesBinary");
                OnPropertyValuesBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValuesBinary;
        partial void OnPropertyValuesBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValuesBinaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pr__UserI__656C112C", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Ro__Appli__66603565", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Ro__Appli__66603565", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Ro__Appli__66603565", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Ro__Appli__66603565", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Ro__Appli__66603565", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("GPSTrackerModel.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("GPSTrackerModel.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Us__Appli__6754599E", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Us__Appli__6754599E", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Us__Appli__6754599E", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Us__Appli__6754599E", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("GPSTrackerModel.FK__aspnet_Us__Appli__6754599E", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Me__UserI__60A75C0F", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("GPSTrackerModel.FK__aspnet_Me__UserI__60A75C0F", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pe__UserI__6477ECF3", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("GPSTrackerModel.FK__aspnet_Pe__UserI__6477ECF3", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("GPSTrackerModel.FK__aspnet_Pe__UserI__6477ECF3", "aspnet_PersonalizationPerUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK__aspnet_Pr__UserI__656C112C", "aspnet_Profile")]
        public aspnet_Profile aspnet_Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Profile> aspnet_ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Profile>("GPSTrackerModel.FK__aspnet_Pr__UserI__656C112C", "aspnet_Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("GPSTrackerModel.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("GPSTrackerModel.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_WebEvent_Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_WebEvent_Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_WebEvent_Events object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventTimeUtc">Initial value of the EventTimeUtc property.</param>
        /// <param name="eventTime">Initial value of the EventTime property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventSequence">Initial value of the EventSequence property.</param>
        /// <param name="eventOccurrence">Initial value of the EventOccurrence property.</param>
        /// <param name="eventCode">Initial value of the EventCode property.</param>
        /// <param name="eventDetailCode">Initial value of the EventDetailCode property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static aspnet_WebEvent_Events Createaspnet_WebEvent_Events(global::System.String eventId, global::System.DateTime eventTimeUtc, global::System.DateTime eventTime, global::System.String eventType, global::System.Decimal eventSequence, global::System.Decimal eventOccurrence, global::System.Int32 eventCode, global::System.Int32 eventDetailCode, global::System.String machineName)
        {
            aspnet_WebEvent_Events aspnet_WebEvent_Events = new aspnet_WebEvent_Events();
            aspnet_WebEvent_Events.EventId = eventId;
            aspnet_WebEvent_Events.EventTimeUtc = eventTimeUtc;
            aspnet_WebEvent_Events.EventTime = eventTime;
            aspnet_WebEvent_Events.EventType = eventType;
            aspnet_WebEvent_Events.EventSequence = eventSequence;
            aspnet_WebEvent_Events.EventOccurrence = eventOccurrence;
            aspnet_WebEvent_Events.EventCode = eventCode;
            aspnet_WebEvent_Events.EventDetailCode = eventDetailCode;
            aspnet_WebEvent_Events.MachineName = machineName;
            return aspnet_WebEvent_Events;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.String _EventId;
        partial void OnEventIdChanging(global::System.String value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTimeUtc
        {
            get
            {
                return _EventTimeUtc;
            }
            set
            {
                OnEventTimeUtcChanging(value);
                ReportPropertyChanging("EventTimeUtc");
                _EventTimeUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTimeUtc");
                OnEventTimeUtcChanged();
            }
        }
        private global::System.DateTime _EventTimeUtc;
        partial void OnEventTimeUtcChanging(global::System.DateTime value);
        partial void OnEventTimeUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTime
        {
            get
            {
                return _EventTime;
            }
            set
            {
                OnEventTimeChanging(value);
                ReportPropertyChanging("EventTime");
                _EventTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTime");
                OnEventTimeChanged();
            }
        }
        private global::System.DateTime _EventTime;
        partial void OnEventTimeChanging(global::System.DateTime value);
        partial void OnEventTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventSequence
        {
            get
            {
                return _EventSequence;
            }
            set
            {
                OnEventSequenceChanging(value);
                ReportPropertyChanging("EventSequence");
                _EventSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventSequence");
                OnEventSequenceChanged();
            }
        }
        private global::System.Decimal _EventSequence;
        partial void OnEventSequenceChanging(global::System.Decimal value);
        partial void OnEventSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventOccurrence
        {
            get
            {
                return _EventOccurrence;
            }
            set
            {
                OnEventOccurrenceChanging(value);
                ReportPropertyChanging("EventOccurrence");
                _EventOccurrence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventOccurrence");
                OnEventOccurrenceChanged();
            }
        }
        private global::System.Decimal _EventOccurrence;
        partial void OnEventOccurrenceChanging(global::System.Decimal value);
        partial void OnEventOccurrenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCode
        {
            get
            {
                return _EventCode;
            }
            set
            {
                OnEventCodeChanging(value);
                ReportPropertyChanging("EventCode");
                _EventCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCode");
                OnEventCodeChanged();
            }
        }
        private global::System.Int32 _EventCode;
        partial void OnEventCodeChanging(global::System.Int32 value);
        partial void OnEventCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventDetailCode
        {
            get
            {
                return _EventDetailCode;
            }
            set
            {
                OnEventDetailCodeChanging(value);
                ReportPropertyChanging("EventDetailCode");
                _EventDetailCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDetailCode");
                OnEventDetailCodeChanged();
            }
        }
        private global::System.Int32 _EventDetailCode;
        partial void OnEventDetailCodeChanging(global::System.Int32 value);
        partial void OnEventDetailCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationPath
        {
            get
            {
                return _ApplicationPath;
            }
            set
            {
                OnApplicationPathChanging(value);
                ReportPropertyChanging("ApplicationPath");
                _ApplicationPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationPath");
                OnApplicationPathChanged();
            }
        }
        private global::System.String _ApplicationPath;
        partial void OnApplicationPathChanging(global::System.String value);
        partial void OnApplicationPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationVirtualPath
        {
            get
            {
                return _ApplicationVirtualPath;
            }
            set
            {
                OnApplicationVirtualPathChanging(value);
                ReportPropertyChanging("ApplicationVirtualPath");
                _ApplicationVirtualPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationVirtualPath");
                OnApplicationVirtualPathChanged();
            }
        }
        private global::System.String _ApplicationVirtualPath;
        partial void OnApplicationVirtualPathChanging(global::System.String value);
        partial void OnApplicationVirtualPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUrl
        {
            get
            {
                return _RequestUrl;
            }
            set
            {
                OnRequestUrlChanging(value);
                ReportPropertyChanging("RequestUrl");
                _RequestUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUrl");
                OnRequestUrlChanged();
            }
        }
        private global::System.String _RequestUrl;
        partial void OnRequestUrlChanging(global::System.String value);
        partial void OnRequestUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionType
        {
            get
            {
                return _ExceptionType;
            }
            set
            {
                OnExceptionTypeChanging(value);
                ReportPropertyChanging("ExceptionType");
                _ExceptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionType");
                OnExceptionTypeChanged();
            }
        }
        private global::System.String _ExceptionType;
        partial void OnExceptionTypeChanging(global::System.String value);
        partial void OnExceptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="dateRegistered">Initial value of the DateRegistered property.</param>
        /// <param name="mainContact">Initial value of the MainContact property.</param>
        /// <param name="secondaryContact">Initial value of the SecondaryContact property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Company CreateCompany(global::System.Int32 id, global::System.String companyName, global::System.DateTime dateRegistered, global::System.String mainContact, global::System.String secondaryContact, global::System.String address)
        {
            Company company = new Company();
            company.Id = id;
            company.CompanyName = companyName;
            company.DateRegistered = dateRegistered;
            company.MainContact = mainContact;
            company.SecondaryContact = secondaryContact;
            company.Address = address;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRegistered
        {
            get
            {
                return _DateRegistered;
            }
            set
            {
                OnDateRegisteredChanging(value);
                ReportPropertyChanging("DateRegistered");
                _DateRegistered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRegistered");
                OnDateRegisteredChanged();
            }
        }
        private global::System.DateTime _DateRegistered;
        partial void OnDateRegisteredChanging(global::System.DateTime value);
        partial void OnDateRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MainContact
        {
            get
            {
                return _MainContact;
            }
            set
            {
                OnMainContactChanging(value);
                ReportPropertyChanging("MainContact");
                _MainContact = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MainContact");
                OnMainContactChanged();
            }
        }
        private global::System.String _MainContact;
        partial void OnMainContactChanging(global::System.String value);
        partial void OnMainContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecondaryContact
        {
            get
            {
                return _SecondaryContact;
            }
            set
            {
                OnSecondaryContactChanging(value);
                ReportPropertyChanging("SecondaryContact");
                _SecondaryContact = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecondaryContact");
                OnSecondaryContactChanged();
            }
        }
        private global::System.String _SecondaryContact;
        partial void OnSecondaryContactChanging(global::System.String value);
        partial void OnSecondaryContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="CompanyTrackerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyTrackerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyTrackerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="trackerUserId">Initial value of the TrackerUserId property.</param>
        public static CompanyTrackerUser CreateCompanyTrackerUser(global::System.Int32 id, global::System.Int32 companyId, global::System.Int32 trackerUserId)
        {
            CompanyTrackerUser companyTrackerUser = new CompanyTrackerUser();
            companyTrackerUser.Id = id;
            companyTrackerUser.CompanyId = companyId;
            companyTrackerUser.TrackerUserId = trackerUserId;
            return companyTrackerUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackerUserId
        {
            get
            {
                return _TrackerUserId;
            }
            set
            {
                OnTrackerUserIdChanging(value);
                ReportPropertyChanging("TrackerUserId");
                _TrackerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackerUserId");
                OnTrackerUserIdChanged();
            }
        }
        private global::System.Int32 _TrackerUserId;
        partial void OnTrackerUserIdChanging(global::System.Int32 value);
        partial void OnTrackerUserIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.String description, global::System.Int32 type, global::System.DateTime time, global::System.String objectId)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.Description = description;
            @event.Type = type;
            @event.Time = time;
            @event.ObjectId = objectId;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtendedProperties
        {
            get
            {
                return _ExtendedProperties;
            }
            set
            {
                OnExtendedPropertiesChanging(value);
                ReportPropertyChanging("ExtendedProperties");
                _ExtendedProperties = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExtendedProperties");
                OnExtendedPropertiesChanged();
            }
        }
        private global::System.String _ExtendedProperties;
        partial void OnExtendedPropertiesChanging(global::System.String value);
        partial void OnExtendedPropertiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                OnObjectIdChanging(value);
                ReportPropertyChanging("ObjectId");
                _ObjectId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectId");
                OnObjectIdChanged();
            }
        }
        private global::System.String _ObjectId;
        partial void OnObjectIdChanging(global::System.String value);
        partial void OnObjectIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static EventType CreateEventType(global::System.Int32 id)
        {
            EventType eventType = new EventType();
            eventType.Id = id;
            return eventType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionTemplate
        {
            get
            {
                return _DescriptionTemplate;
            }
            set
            {
                OnDescriptionTemplateChanging(value);
                ReportPropertyChanging("DescriptionTemplate");
                _DescriptionTemplate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionTemplate");
                OnDescriptionTemplateChanged();
            }
        }
        private global::System.String _DescriptionTemplate;
        partial void OnDescriptionTemplateChanging(global::System.String value);
        partial void OnDescriptionTemplateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectType
        {
            get
            {
                return _ObjectType;
            }
            set
            {
                OnObjectTypeChanging(value);
                ReportPropertyChanging("ObjectType");
                _ObjectType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectType");
                OnObjectTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectType;
        partial void OnObjectTypeChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PermissionsId
        {
            get
            {
                return _PermissionsId;
            }
            set
            {
                OnPermissionsIdChanging(value);
                ReportPropertyChanging("PermissionsId");
                _PermissionsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionsId");
                OnPermissionsIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PermissionsId;
        partial void OnPermissionsIdChanging(Nullable<global::System.Int32> value);
        partial void OnPermissionsIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Exception")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exception : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exception object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="exceptionText">Initial value of the ExceptionText property.</param>
        /// <param name="serverDateTime">Initial value of the ServerDateTime property.</param>
        public static Exception CreateException(global::System.Int32 id, global::System.String exceptionText, global::System.DateTime serverDateTime)
        {
            Exception exception = new Exception();
            exception.Id = id;
            exception.ExceptionText = exceptionText;
            exception.ServerDateTime = serverDateTime;
            return exception;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExceptionText
        {
            get
            {
                return _ExceptionText;
            }
            set
            {
                OnExceptionTextChanging(value);
                ReportPropertyChanging("ExceptionText");
                _ExceptionText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExceptionText");
                OnExceptionTextChanged();
            }
        }
        private global::System.String _ExceptionText;
        partial void OnExceptionTextChanging(global::System.String value);
        partial void OnExceptionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServerDateTime
        {
            get
            {
                return _ServerDateTime;
            }
            set
            {
                OnServerDateTimeChanging(value);
                ReportPropertyChanging("ServerDateTime");
                _ServerDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerDateTime");
                OnServerDateTimeChanged();
            }
        }
        private global::System.DateTime _ServerDateTime;
        partial void OnServerDateTimeChanging(global::System.DateTime value);
        partial void OnServerDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="GeoFence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeoFence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeoFence object.
        /// </summary>
        /// <param name="fencesId">Initial value of the FencesId property.</param>
        public static GeoFence CreateGeoFence(global::System.Int32 fencesId)
        {
            GeoFence geoFence = new GeoFence();
            geoFence.FencesId = fencesId;
            return geoFence;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FencesId
        {
            get
            {
                return _FencesId;
            }
            set
            {
                if (_FencesId != value)
                {
                    OnFencesIdChanging(value);
                    ReportPropertyChanging("FencesId");
                    _FencesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FencesId");
                    OnFencesIdChanged();
                }
            }
        }
        private global::System.Int32 _FencesId;
        partial void OnFencesIdChanging(global::System.Int32 value);
        partial void OnFencesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FencesName
        {
            get
            {
                return _FencesName;
            }
            set
            {
                OnFencesNameChanging(value);
                ReportPropertyChanging("FencesName");
                _FencesName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FencesName");
                OnFencesNameChanged();
            }
        }
        private global::System.String _FencesName;
        partial void OnFencesNameChanging(global::System.String value);
        partial void OnFencesNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FencesCoordinate
        {
            get
            {
                return _FencesCoordinate;
            }
            set
            {
                OnFencesCoordinateChanging(value);
                ReportPropertyChanging("FencesCoordinate");
                _FencesCoordinate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FencesCoordinate");
                OnFencesCoordinateChanged();
            }
        }
        private global::System.String _FencesCoordinate;
        partial void OnFencesCoordinateChanging(global::System.String value);
        partial void OnFencesCoordinateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPublic;
        partial void OnIsPublicChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Zoom
        {
            get
            {
                return _Zoom;
            }
            set
            {
                OnZoomChanging(value);
                ReportPropertyChanging("Zoom");
                _Zoom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zoom");
                OnZoomChanged();
            }
        }
        private Nullable<global::System.Int32> _Zoom;
        partial void OnZoomChanging(Nullable<global::System.Int32> value);
        partial void OnZoomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK_GeoFences_GeoFencesType", "GeoFenceType")]
        public GeoFenceType GeoFenceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeoFenceType>("GPSTrackerModel.FK_GeoFences_GeoFencesType", "GeoFenceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeoFenceType>("GPSTrackerModel.FK_GeoFences_GeoFencesType", "GeoFenceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GeoFenceType> GeoFenceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeoFenceType>("GPSTrackerModel.FK_GeoFences_GeoFencesType", "GeoFenceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GeoFenceType>("GPSTrackerModel.FK_GeoFences_GeoFencesType", "GeoFenceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="GeoFenceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeoFenceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeoFenceType object.
        /// </summary>
        /// <param name="fencesTypeId">Initial value of the FencesTypeId property.</param>
        public static GeoFenceType CreateGeoFenceType(global::System.Int32 fencesTypeId)
        {
            GeoFenceType geoFenceType = new GeoFenceType();
            geoFenceType.FencesTypeId = fencesTypeId;
            return geoFenceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FencesTypeId
        {
            get
            {
                return _FencesTypeId;
            }
            set
            {
                if (_FencesTypeId != value)
                {
                    OnFencesTypeIdChanging(value);
                    ReportPropertyChanging("FencesTypeId");
                    _FencesTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FencesTypeId");
                    OnFencesTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FencesTypeId;
        partial void OnFencesTypeIdChanging(global::System.Int32 value);
        partial void OnFencesTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FencesTypeName
        {
            get
            {
                return _FencesTypeName;
            }
            set
            {
                OnFencesTypeNameChanging(value);
                ReportPropertyChanging("FencesTypeName");
                _FencesTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FencesTypeName");
                OnFencesTypeNameChanged();
            }
        }
        private global::System.String _FencesTypeName;
        partial void OnFencesTypeNameChanging(global::System.String value);
        partial void OnFencesTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GPSTrackerModel", "FK_GeoFences_GeoFencesType", "GeoFence")]
        public EntityCollection<GeoFence> GeoFences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeoFence>("GPSTrackerModel.FK_GeoFences_GeoFencesType", "GeoFence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeoFence>("GPSTrackerModel.FK_GeoFences_GeoFencesType", "GeoFence", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        public static Group CreateGroup(global::System.Int32 groupId, global::System.String groupName)
        {
            Group group = new Group();
            group.GroupId = groupId;
            group.GroupName = groupName;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                if (_GroupId != value)
                {
                    OnGroupIdChanging(value);
                    ReportPropertyChanging("GroupId");
                    _GroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupId");
                    OnGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="GroupAlert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupAlert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupAlert object.
        /// </summary>
        /// <param name="groupAlertId">Initial value of the GroupAlertId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="alertId">Initial value of the AlertId property.</param>
        public static GroupAlert CreateGroupAlert(global::System.Int32 groupAlertId, global::System.Int32 groupId, global::System.Int32 alertId)
        {
            GroupAlert groupAlert = new GroupAlert();
            groupAlert.GroupAlertId = groupAlertId;
            groupAlert.GroupId = groupId;
            groupAlert.AlertId = alertId;
            return groupAlert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupAlertId
        {
            get
            {
                return _GroupAlertId;
            }
            set
            {
                if (_GroupAlertId != value)
                {
                    OnGroupAlertIdChanging(value);
                    ReportPropertyChanging("GroupAlertId");
                    _GroupAlertId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupAlertId");
                    OnGroupAlertIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupAlertId;
        partial void OnGroupAlertIdChanging(global::System.Int32 value);
        partial void OnGroupAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertId
        {
            get
            {
                return _AlertId;
            }
            set
            {
                OnAlertIdChanging(value);
                ReportPropertyChanging("AlertId");
                _AlertId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertId");
                OnAlertIdChanged();
            }
        }
        private global::System.Int32 _AlertId;
        partial void OnAlertIdChanging(global::System.Int32 value);
        partial void OnAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FencesId
        {
            get
            {
                return _FencesId;
            }
            set
            {
                OnFencesIdChanging(value);
                ReportPropertyChanging("FencesId");
                _FencesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FencesId");
                OnFencesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FencesId;
        partial void OnFencesIdChanging(Nullable<global::System.Int32> value);
        partial void OnFencesIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="LocationMessageAlert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationMessageAlert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationMessageAlert object.
        /// </summary>
        /// <param name="messageAlertId">Initial value of the MessageAlertId property.</param>
        public static LocationMessageAlert CreateLocationMessageAlert(global::System.Int64 messageAlertId)
        {
            LocationMessageAlert locationMessageAlert = new LocationMessageAlert();
            locationMessageAlert.MessageAlertId = messageAlertId;
            return locationMessageAlert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MessageAlertId
        {
            get
            {
                return _MessageAlertId;
            }
            set
            {
                if (_MessageAlertId != value)
                {
                    OnMessageAlertIdChanging(value);
                    ReportPropertyChanging("MessageAlertId");
                    _MessageAlertId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageAlertId");
                    OnMessageAlertIdChanged();
                }
            }
        }
        private global::System.Int64 _MessageAlertId;
        partial void OnMessageAlertIdChanging(global::System.Int64 value);
        partial void OnMessageAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationMessageId
        {
            get
            {
                return _LocationMessageId;
            }
            set
            {
                OnLocationMessageIdChanging(value);
                ReportPropertyChanging("LocationMessageId");
                _LocationMessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationMessageId");
                OnLocationMessageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationMessageId;
        partial void OnLocationMessageIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private Nullable<global::System.Double> _Lat;
        partial void OnLatChanging(Nullable<global::System.Double> value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Lang
        {
            get
            {
                return _Lang;
            }
            set
            {
                OnLangChanging(value);
                ReportPropertyChanging("Lang");
                _Lang = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lang");
                OnLangChanged();
            }
        }
        private Nullable<global::System.Double> _Lang;
        partial void OnLangChanging(Nullable<global::System.Double> value);
        partial void OnLangChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Alt
        {
            get
            {
                return _Alt;
            }
            set
            {
                OnAltChanging(value);
                ReportPropertyChanging("Alt");
                _Alt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alt");
                OnAltChanged();
            }
        }
        private Nullable<global::System.Int32> _Alt;
        partial void OnAltChanging(Nullable<global::System.Int32> value);
        partial void OnAltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsProcessed
        {
            get
            {
                return _IsProcessed;
            }
            set
            {
                OnIsProcessedChanging(value);
                ReportPropertyChanging("IsProcessed");
                _IsProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProcessed");
                OnIsProcessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsProcessed;
        partial void OnIsProcessedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsProcessedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="LocationMessages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationMessages : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new LocationMessages object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rawTextData">Initial value of the RawTextData property.</param>
        /// <param name="latDegrees">Initial value of the LatDegrees property.</param>
        /// <param name="latMinutes">Initial value of the LatMinutes property.</param>
        /// <param name="latSeconds">Initial value of the LatSeconds property.</param>
        /// <param name="lngDegrees">Initial value of the LngDegrees property.</param>
        /// <param name="lngMinutes">Initial value of the LngMinutes property.</param>
        /// <param name="lngSeconds">Initial value of the LngSeconds property.</param>
        /// <param name="serverTime">Initial value of the ServerTime property.</param>
        /// <param name="latitudeHeading">Initial value of the LatitudeHeading property.</param>
        /// <param name="longitudeHeading">Initial value of the LongitudeHeading property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        /// <param name="idleTime">Initial value of the IdleTime property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="messageTime">Initial value of the MessageTime property.</param>
        /// <param name="hDOP">Initial value of the HDOP property.</param>
        /// <param name="vDOP">Initial value of the VDOP property.</param>
        /// <param name="altitude">Initial value of the Altitude property.</param>
        /// <param name="extended_Functions">Initial value of the Extended_Functions property.</param>
        public static LocationMessages CreateLocationMessages(global::System.Int32 id, global::System.String rawTextData, global::System.Int32 latDegrees, global::System.Int32 latMinutes, global::System.Double latSeconds, global::System.Int32 lngDegrees, global::System.Int32 lngMinutes, global::System.Double lngSeconds, global::System.DateTime serverTime, global::System.String trackerId, global::System.String latitudeHeading, global::System.String longitudeHeading, global::System.Double speed, global::System.Int64 idleTime, global::System.Double direction, global::System.String status, global::System.DateTime messageTime, global::System.Double hDOP, global::System.Double vDOP, global::System.Int32 altitude, global::System.String extended_Functions, global::System.Double input1, global::System.Double input2, global::System.Boolean? digiIn1, global::System.Boolean? digiIn2, global::System.Boolean? digiIn3, global::System.Boolean? digiIn4, global::System.Boolean? digiIn5, global::System.Double? mileage)
        {
            LocationMessages locationMessages = new LocationMessages();
            locationMessages.Id = id;
            locationMessages.RawTextData = rawTextData;
            locationMessages.LatDegrees = latDegrees;
            locationMessages.LatMinutes = latMinutes;
            locationMessages.LatSeconds = latSeconds;
            locationMessages.LngDegrees = lngDegrees;
            locationMessages.LngMinutes = lngMinutes;
            locationMessages.LngSeconds = lngSeconds;
            locationMessages.ServerTime = serverTime;
            locationMessages.TrackerId = trackerId;

            locationMessages.LatitudeHeading = latitudeHeading;
            locationMessages.LongitudeHeading = longitudeHeading;
            locationMessages.Speed = speed;
            locationMessages.IdleTime = idleTime;
            locationMessages.Direction = direction;
            locationMessages.Status = status;
            locationMessages.MessageTime = messageTime;
            locationMessages.HDOP = hDOP;
            locationMessages.VDOP = vDOP;
            locationMessages.Altitude = altitude;
            locationMessages.Extended_Functions = extended_Functions;

            locationMessages.Input1 = input1;
            locationMessages.Input2 = input2;
            locationMessages.DigiInput1 = digiIn1;
            locationMessages.DigiInput2 = digiIn2;
            locationMessages.DigiInput3 = digiIn3;
            locationMessages.DigiInput4 = digiIn4;
            locationMessages.DigiInput5 = digiIn5;

            locationMessages.Mileage = mileage;

            return locationMessages;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RawTextData
        {
            get
            {
                return _RawTextData;
            }
            set
            {
                OnRawTextDataChanging(value);
                ReportPropertyChanging("RawTextData");
                _RawTextData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RawTextData");
                OnRawTextDataChanged();
            }
        }
        private global::System.String _RawTextData;
        partial void OnRawTextDataChanging(global::System.String value);
        partial void OnRawTextDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatDegrees
        {
            get
            {
                return _LatDegrees;
            }
            set
            {
                OnLatDegreesChanging(value);
                ReportPropertyChanging("LatDegrees");
                _LatDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatDegrees");
                OnLatDegreesChanged();
            }
        }
        private global::System.Int32 _LatDegrees;
        partial void OnLatDegreesChanging(global::System.Int32 value);
        partial void OnLatDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatMinutes
        {
            get
            {
                return _LatMinutes;
            }
            set
            {
                OnLatMinutesChanging(value);
                ReportPropertyChanging("LatMinutes");
                _LatMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatMinutes");
                OnLatMinutesChanged();
            }
        }
        private global::System.Int32 _LatMinutes;
        partial void OnLatMinutesChanging(global::System.Int32 value);
        partial void OnLatMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LatSeconds
        {
            get
            {
                return _LatSeconds;
            }
            set
            {
                OnLatSecondsChanging(value);
                ReportPropertyChanging("LatSeconds");
                _LatSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatSeconds");
                OnLatSecondsChanged();
            }
        }
        private global::System.Double _LatSeconds;
        partial void OnLatSecondsChanging(global::System.Double value);
        partial void OnLatSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngDegrees
        {
            get
            {
                return _LngDegrees;
            }
            set
            {
                OnLngDegreesChanging(value);
                ReportPropertyChanging("LngDegrees");
                _LngDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngDegrees");
                OnLngDegreesChanged();
            }
        }
        private global::System.Int32 _LngDegrees;
        partial void OnLngDegreesChanging(global::System.Int32 value);
        partial void OnLngDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngMinutes
        {
            get
            {
                return _LngMinutes;
            }
            set
            {
                OnLngMinutesChanging(value);
                ReportPropertyChanging("LngMinutes");
                _LngMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngMinutes");
                OnLngMinutesChanged();
            }
        }
        private global::System.Int32 _LngMinutes;
        partial void OnLngMinutesChanging(global::System.Int32 value);
        partial void OnLngMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LngSeconds
        {
            get
            {
                return _LngSeconds;
            }
            set
            {
                OnLngSecondsChanging(value);
                ReportPropertyChanging("LngSeconds");
                _LngSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngSeconds");
                OnLngSecondsChanged();
            }
        }
        private global::System.Double _LngSeconds;
        partial void OnLngSecondsChanging(global::System.Double value);
        partial void OnLngSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServerTime
        {
            get
            {
                return _ServerTime;
            }
            set
            {
                OnServerTimeChanging(value);
                ReportPropertyChanging("ServerTime");
                _ServerTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerTime");
                OnServerTimeChanged();
            }
        }
        private global::System.DateTime _ServerTime;
        partial void OnServerTimeChanging(global::System.DateTime value);
        partial void OnServerTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LatitudeHeading
        {
            get
            {
                return _LatitudeHeading;
            }
            set
            {
                OnLatitudeHeadingChanging(value);
                ReportPropertyChanging("LatitudeHeading");
                _LatitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LatitudeHeading");
                OnLatitudeHeadingChanged();
            }
        }
        private global::System.String _LatitudeHeading;
        partial void OnLatitudeHeadingChanging(global::System.String value);
        partial void OnLatitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongitudeHeading
        {
            get
            {
                return _LongitudeHeading;
            }
            set
            {
                OnLongitudeHeadingChanging(value);
                ReportPropertyChanging("LongitudeHeading");
                _LongitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongitudeHeading");
                OnLongitudeHeadingChanged();
            }
        }
        private global::System.String _LongitudeHeading;
        partial void OnLongitudeHeadingChanging(global::System.String value);
        partial void OnLongitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Double _Speed;
        partial void OnSpeedChanging(global::System.Double value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdleTime
        {
            get
            {
                return _IdleTime;
            }
            set
            {
                OnIdleTimeChanging(value);
                ReportPropertyChanging("IdleTime");
                _IdleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdleTime");
                OnIdleTimeChanged();
            }
        }
        private global::System.Int64 _IdleTime;
        partial void OnIdleTimeChanging(global::System.Int64 value);
        partial void OnIdleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.Double _Direction;
        partial void OnDirectionChanging(global::System.Double value);
        partial void OnDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageTime
        {
            get
            {
                return _MessageTime;
            }
            set
            {
                OnMessageTimeChanging(value);
                ReportPropertyChanging("MessageTime");
                _MessageTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTime");
                OnMessageTimeChanged();
            }
        }
        private global::System.DateTime _MessageTime;
        partial void OnMessageTimeChanging(global::System.DateTime value);
        partial void OnMessageTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HDOP
        {
            get
            {
                return _HDOP;
            }
            set
            {
                OnHDOPChanging(value);
                ReportPropertyChanging("HDOP");
                _HDOP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HDOP");
                OnHDOPChanged();
            }
        }
        private global::System.Double _HDOP;
        partial void OnHDOPChanging(global::System.Double value);
        partial void OnHDOPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double VDOP
        {
            get
            {
                return _VDOP;
            }
            set
            {
                OnVDOPChanging(value);
                ReportPropertyChanging("VDOP");
                _VDOP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VDOP");
                OnVDOPChanged();
            }
        }
        private global::System.Double _VDOP;
        partial void OnVDOPChanging(global::System.Double value);
        partial void OnVDOPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Altitude
        {
            get
            {
                return _Altitude;
            }
            set
            {
                OnAltitudeChanging(value);
                ReportPropertyChanging("Altitude");
                _Altitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altitude");
                OnAltitudeChanged();
            }
        }
        private global::System.Int32 _Altitude;
        partial void OnAltitudeChanging(global::System.Int32 value);
        partial void OnAltitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extended_Functions
        {
            get
            {
                return _Extended_Functions;
            }
            set
            {
                OnExtended_FunctionsChanging(value);
                ReportPropertyChanging("Extended_Functions");
                _Extended_Functions = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extended_Functions");
                OnExtended_FunctionsChanged();
            }
        }
        private global::System.String _Extended_Functions;
        partial void OnExtended_FunctionsChanging(global::System.String value);
        partial void OnExtended_FunctionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Input1
        {
            get
            {
                return _Input1;
            }
            set
            {
                OnInput1Changing(value);
                ReportPropertyChanging("Input1");
                _Input1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Input1");
                OnInput1Changed();
            }
        }
        private Nullable<global::System.Double> _Input1;
        partial void OnInput1Changing(Nullable<global::System.Double> value);
        partial void OnInput1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Input2
        {
            get
            {
                return _Input2;
            }
            set
            {
                OnInput2Changing(value);
                ReportPropertyChanging("Input2");
                _Input2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Input2");
                OnInput2Changed();
            }
        }
        private Nullable<global::System.Double> _Input2;
        partial void OnInput2Changing(Nullable<global::System.Double> value);
        partial void OnInput2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput1
        {
            get
            {
                return _DInput1;
            }
            set
            {
                OnDInput1Changing(value);
                ReportPropertyChanging("DInput1");
                _DInput1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput1");
                OnDInput1Changed();
            }
        }
        private Nullable<global::System.Double> _DInput1;
        partial void OnDInput1Changing(Nullable<global::System.Double> value);
        partial void OnDInput1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput2
        {
            get
            {
                return _DInput2;
            }
            set
            {
                OnDInput2Changing(value);
                ReportPropertyChanging("DInput2");
                _DInput2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput2");
                OnDInput2Changed();
            }
        }
        private Nullable<global::System.Double> _DInput2;
        partial void OnDInput2Changing(Nullable<global::System.Double> value);
        partial void OnDInput2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput3
        {
            get
            {
                return _DInput3;
            }
            set
            {
                OnDInput3Changing(value);
                ReportPropertyChanging("DInput3");
                _DInput3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput3");
                OnDInput3Changed();
            }
        }
        private Nullable<global::System.Double> _DInput3;
        partial void OnDInput3Changing(Nullable<global::System.Double> value);
        partial void OnDInput3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput4
        {
            get
            {
                return _DInput4;
            }
            set
            {
                OnDInput4Changing(value);
                ReportPropertyChanging("DInput4");
                _DInput4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput4");
                OnDInput4Changed();
            }
        }
        private Nullable<global::System.Double> _DInput4;
        partial void OnDInput4Changing(Nullable<global::System.Double> value);
        partial void OnDInput4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput5
        {
            get
            {
                return _DInput5;
            }
            set
            {
                OnDInput5Changing(value);
                ReportPropertyChanging("DInput5");
                _DInput5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput5");
                OnDInput5Changed();
            }
        }
        private Nullable<global::System.Double> _DInput5;
        partial void OnDInput5Changing(Nullable<global::System.Double> value);
        partial void OnDInput5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DigiInput1
        {
            get
            {
                return _DigiInput1;
            }
            set
            {
                OnDigiInput1Changing(value);
                ReportPropertyChanging("DigiInput1");
                _DigiInput1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DigiInput1");
                OnDigiInput1Changed();
            }
        }
        private Nullable<global::System.Boolean> _DigiInput1;
        partial void OnDigiInput1Changing(Nullable<global::System.Boolean> value);
        partial void OnDigiInput1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DigiInput2
        {
            get
            {
                return _DigiInput2;
            }
            set
            {
                OnDigiInput2Changing(value);
                ReportPropertyChanging("DigiInput2");
                _DigiInput2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DigiInput2");
                OnDigiInput2Changed();
            }
        }
        private Nullable<global::System.Boolean> _DigiInput2;
        partial void OnDigiInput2Changing(Nullable<global::System.Boolean> value);
        partial void OnDigiInput2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DigiInput3
        {
            get
            {
                return _DigiInput3;
            }
            set
            {
                OnDigiInput3Changing(value);
                ReportPropertyChanging("DigiInput3");
                _DigiInput3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DigiInput3");
                OnDigiInput3Changed();
            }
        }
        private Nullable<global::System.Boolean> _DigiInput3;
        partial void OnDigiInput3Changing(Nullable<global::System.Boolean> value);
        partial void OnDigiInput3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DigiInput4
        {
            get
            {
                return _DigiInput4;
            }
            set
            {
                OnDigiInput4Changing(value);
                ReportPropertyChanging("DigiInput4");
                _DigiInput4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DigiInput4");
                OnDigiInput4Changed();
            }
        }
        private Nullable<global::System.Boolean> _DigiInput4;
        partial void OnDigiInput4Changing(Nullable<global::System.Boolean> value);
        partial void OnDigiInput4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DigiInput5
        {
            get
            {
                return _DigiInput5;
            }
            set
            {
                OnDigiInput5Changing(value);
                ReportPropertyChanging("DigiInput5");
                _DigiInput5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DigiInput5");
                OnDigiInput5Changed();
            }
        }
        private Nullable<global::System.Boolean> _DigiInput5;
        partial void OnDigiInput5Changing(Nullable<global::System.Boolean> value);
        partial void OnDigiInput5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private Nullable<global::System.Double> _Mileage;
        partial void OnMileageChanging(Nullable<global::System.Double> value);
        partial void OnMileageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="LocationMessages2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationMessages2 : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new LocationMessages2 object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rawTextData">Initial value of the RawTextData property.</param>
        /// <param name="latDegrees">Initial value of the LatDegrees property.</param>
        /// <param name="latMinutes">Initial value of the LatMinutes property.</param>
        /// <param name="latSeconds">Initial value of the LatSeconds property.</param>
        /// <param name="lngDegrees">Initial value of the LngDegrees property.</param>
        /// <param name="lngMinutes">Initial value of the LngMinutes property.</param>
        /// <param name="lngSeconds">Initial value of the LngSeconds property.</param>
        /// <param name="serverTime">Initial value of the ServerTime property.</param>
        /// <param name="latitudeHeading">Initial value of the LatitudeHeading property.</param>
        /// <param name="longitudeHeading">Initial value of the LongitudeHeading property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        /// <param name="idleTime">Initial value of the IdleTime property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="messageTime">Initial value of the MessageTime property.</param>
        /// <param name="hDOP">Initial value of the HDOP property.</param>
        /// <param name="vDOP">Initial value of the VDOP property.</param>
        /// <param name="altitude">Initial value of the Altitude property.</param>
        /// <param name="extended_Functions">Initial value of the Extended_Functions property.</param>
        public static LocationMessages2 CreateLocationMessages2(global::System.Int32 id, global::System.String rawTextData, global::System.Int32 latDegrees, global::System.Int32 latMinutes, global::System.Double latSeconds, global::System.Int32 lngDegrees, global::System.Int32 lngMinutes, global::System.Double lngSeconds, global::System.DateTime serverTime, global::System.String trackerId, global::System.String latitudeHeading, global::System.String longitudeHeading, global::System.Double speed, global::System.Int64 idleTime, global::System.Double direction, global::System.String status, global::System.DateTime messageTime, global::System.Double hDOP, global::System.Double vDOP, global::System.Int32 altitude, global::System.String extended_Functions)
        {
            LocationMessages2 locationMessages2 = new LocationMessages2();
            locationMessages2.Id = id;
            locationMessages2.RawTextData = rawTextData;
            locationMessages2.LatDegrees = latDegrees;
            locationMessages2.LatMinutes = latMinutes;
            locationMessages2.LatSeconds = latSeconds;
            locationMessages2.LngDegrees = lngDegrees;
            locationMessages2.LngMinutes = lngMinutes;
            locationMessages2.LngSeconds = lngSeconds;
            locationMessages2.ServerTime = serverTime;
            locationMessages2.TrackerId = trackerId;

            locationMessages2.LatitudeHeading = latitudeHeading;
            locationMessages2.LongitudeHeading = longitudeHeading;
            locationMessages2.Speed = speed;
            locationMessages2.IdleTime = idleTime;
            locationMessages2.Direction = direction;
            locationMessages2.Status = status;
            locationMessages2.MessageTime = messageTime;
            locationMessages2.HDOP = hDOP;
            locationMessages2.VDOP = vDOP;
            locationMessages2.Altitude = altitude;
            locationMessages2.Extended_Functions = extended_Functions;
            return locationMessages2;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RawTextData
        {
            get
            {
                return _RawTextData;
            }
            set
            {
                OnRawTextDataChanging(value);
                ReportPropertyChanging("RawTextData");
                _RawTextData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RawTextData");
                OnRawTextDataChanged();
            }
        }
        private global::System.String _RawTextData;
        partial void OnRawTextDataChanging(global::System.String value);
        partial void OnRawTextDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatDegrees
        {
            get
            {
                return _LatDegrees;
            }
            set
            {
                OnLatDegreesChanging(value);
                ReportPropertyChanging("LatDegrees");
                _LatDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatDegrees");
                OnLatDegreesChanged();
            }
        }
        private global::System.Int32 _LatDegrees;
        partial void OnLatDegreesChanging(global::System.Int32 value);
        partial void OnLatDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatMinutes
        {
            get
            {
                return _LatMinutes;
            }
            set
            {
                OnLatMinutesChanging(value);
                ReportPropertyChanging("LatMinutes");
                _LatMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatMinutes");
                OnLatMinutesChanged();
            }
        }
        private global::System.Int32 _LatMinutes;
        partial void OnLatMinutesChanging(global::System.Int32 value);
        partial void OnLatMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LatSeconds
        {
            get
            {
                return _LatSeconds;
            }
            set
            {
                OnLatSecondsChanging(value);
                ReportPropertyChanging("LatSeconds");
                _LatSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatSeconds");
                OnLatSecondsChanged();
            }
        }
        private global::System.Double _LatSeconds;
        partial void OnLatSecondsChanging(global::System.Double value);
        partial void OnLatSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngDegrees
        {
            get
            {
                return _LngDegrees;
            }
            set
            {
                OnLngDegreesChanging(value);
                ReportPropertyChanging("LngDegrees");
                _LngDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngDegrees");
                OnLngDegreesChanged();
            }
        }
        private global::System.Int32 _LngDegrees;
        partial void OnLngDegreesChanging(global::System.Int32 value);
        partial void OnLngDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngMinutes
        {
            get
            {
                return _LngMinutes;
            }
            set
            {
                OnLngMinutesChanging(value);
                ReportPropertyChanging("LngMinutes");
                _LngMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngMinutes");
                OnLngMinutesChanged();
            }
        }
        private global::System.Int32 _LngMinutes;
        partial void OnLngMinutesChanging(global::System.Int32 value);
        partial void OnLngMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LngSeconds
        {
            get
            {
                return _LngSeconds;
            }
            set
            {
                OnLngSecondsChanging(value);
                ReportPropertyChanging("LngSeconds");
                _LngSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngSeconds");
                OnLngSecondsChanged();
            }
        }
        private global::System.Double _LngSeconds;
        partial void OnLngSecondsChanging(global::System.Double value);
        partial void OnLngSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServerTime
        {
            get
            {
                return _ServerTime;
            }
            set
            {
                OnServerTimeChanging(value);
                ReportPropertyChanging("ServerTime");
                _ServerTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerTime");
                OnServerTimeChanged();
            }
        }
        private global::System.DateTime _ServerTime;
        partial void OnServerTimeChanging(global::System.DateTime value);
        partial void OnServerTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LatitudeHeading
        {
            get
            {
                return _LatitudeHeading;
            }
            set
            {
                OnLatitudeHeadingChanging(value);
                ReportPropertyChanging("LatitudeHeading");
                _LatitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LatitudeHeading");
                OnLatitudeHeadingChanged();
            }
        }
        private global::System.String _LatitudeHeading;
        partial void OnLatitudeHeadingChanging(global::System.String value);
        partial void OnLatitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongitudeHeading
        {
            get
            {
                return _LongitudeHeading;
            }
            set
            {
                OnLongitudeHeadingChanging(value);
                ReportPropertyChanging("LongitudeHeading");
                _LongitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongitudeHeading");
                OnLongitudeHeadingChanged();
            }
        }
        private global::System.String _LongitudeHeading;
        partial void OnLongitudeHeadingChanging(global::System.String value);
        partial void OnLongitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Double _Speed;
        partial void OnSpeedChanging(global::System.Double value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdleTime
        {
            get
            {
                return _IdleTime;
            }
            set
            {
                OnIdleTimeChanging(value);
                ReportPropertyChanging("IdleTime");
                _IdleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdleTime");
                OnIdleTimeChanged();
            }
        }
        private global::System.Int64 _IdleTime;
        partial void OnIdleTimeChanging(global::System.Int64 value);
        partial void OnIdleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.Double _Direction;
        partial void OnDirectionChanging(global::System.Double value);
        partial void OnDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageTime
        {
            get
            {
                return _MessageTime;
            }
            set
            {
                OnMessageTimeChanging(value);
                ReportPropertyChanging("MessageTime");
                _MessageTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTime");
                OnMessageTimeChanged();
            }
        }
        private global::System.DateTime _MessageTime;
        partial void OnMessageTimeChanging(global::System.DateTime value);
        partial void OnMessageTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HDOP
        {
            get
            {
                return _HDOP;
            }
            set
            {
                OnHDOPChanging(value);
                ReportPropertyChanging("HDOP");
                _HDOP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HDOP");
                OnHDOPChanged();
            }
        }
        private global::System.Double _HDOP;
        partial void OnHDOPChanging(global::System.Double value);
        partial void OnHDOPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double VDOP
        {
            get
            {
                return _VDOP;
            }
            set
            {
                OnVDOPChanging(value);
                ReportPropertyChanging("VDOP");
                _VDOP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VDOP");
                OnVDOPChanged();
            }
        }
        private global::System.Double _VDOP;
        partial void OnVDOPChanging(global::System.Double value);
        partial void OnVDOPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Altitude
        {
            get
            {
                return _Altitude;
            }
            set
            {
                OnAltitudeChanging(value);
                ReportPropertyChanging("Altitude");
                _Altitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altitude");
                OnAltitudeChanged();
            }
        }
        private global::System.Int32 _Altitude;
        partial void OnAltitudeChanging(global::System.Int32 value);
        partial void OnAltitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extended_Functions
        {
            get
            {
                return _Extended_Functions;
            }
            set
            {
                OnExtended_FunctionsChanging(value);
                ReportPropertyChanging("Extended_Functions");
                _Extended_Functions = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extended_Functions");
                OnExtended_FunctionsChanged();
            }
        }
        private global::System.String _Extended_Functions;
        partial void OnExtended_FunctionsChanging(global::System.String value);
        partial void OnExtended_FunctionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Input1
        {
            get
            {
                return _Input1;
            }
            set
            {
                OnInput1Changing(value);
                ReportPropertyChanging("Input1");
                _Input1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Input1");
                OnInput1Changed();
            }
        }
        private Nullable<global::System.Double> _Input1;
        partial void OnInput1Changing(Nullable<global::System.Double> value);
        partial void OnInput1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Input2
        {
            get
            {
                return _Input2;
            }
            set
            {
                OnInput2Changing(value);
                ReportPropertyChanging("Input2");
                _Input2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Input2");
                OnInput2Changed();
            }
        }
        private Nullable<global::System.Double> _Input2;
        partial void OnInput2Changing(Nullable<global::System.Double> value);
        partial void OnInput2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput1
        {
            get
            {
                return _DInput1;
            }
            set
            {
                OnDInput1Changing(value);
                ReportPropertyChanging("DInput1");
                _DInput1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput1");
                OnDInput1Changed();
            }
        }
        private Nullable<global::System.Double> _DInput1;
        partial void OnDInput1Changing(Nullable<global::System.Double> value);
        partial void OnDInput1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput2
        {
            get
            {
                return _DInput2;
            }
            set
            {
                OnDInput2Changing(value);
                ReportPropertyChanging("DInput2");
                _DInput2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput2");
                OnDInput2Changed();
            }
        }
        private Nullable<global::System.Double> _DInput2;
        partial void OnDInput2Changing(Nullable<global::System.Double> value);
        partial void OnDInput2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput3
        {
            get
            {
                return _DInput3;
            }
            set
            {
                OnDInput3Changing(value);
                ReportPropertyChanging("DInput3");
                _DInput3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput3");
                OnDInput3Changed();
            }
        }
        private Nullable<global::System.Double> _DInput3;
        partial void OnDInput3Changing(Nullable<global::System.Double> value);
        partial void OnDInput3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput4
        {
            get
            {
                return _DInput4;
            }
            set
            {
                OnDInput4Changing(value);
                ReportPropertyChanging("DInput4");
                _DInput4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput4");
                OnDInput4Changed();
            }
        }
        private Nullable<global::System.Double> _DInput4;
        partial void OnDInput4Changing(Nullable<global::System.Double> value);
        partial void OnDInput4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DInput5
        {
            get
            {
                return _DInput5;
            }
            set
            {
                OnDInput5Changing(value);
                ReportPropertyChanging("DInput5");
                _DInput5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DInput5");
                OnDInput5Changed();
            }
        }
        private Nullable<global::System.Double> _DInput5;
        partial void OnDInput5Changing(Nullable<global::System.Double> value);
        partial void OnDInput5Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="LR_LimerInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LR_LimerInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LR_LimerInfo object.
        /// </summary>
        /// <param name="trackerId">Initial value of the TrackerId property.</param>
        /// <param name="vibe">Initial value of the Vibe property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static LR_LimerInfo CreateLR_LimerInfo(global::System.String trackerId, global::System.Int32 vibe, global::System.String message, global::System.Int32 status)
        {
            LR_LimerInfo lR_LimerInfo = new LR_LimerInfo();
            lR_LimerInfo.TrackerId = trackerId;
            lR_LimerInfo.Vibe = vibe;
            lR_LimerInfo.Message = message;
            lR_LimerInfo.Status = status;
            return lR_LimerInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                if (_TrackerId != value)
                {
                    OnTrackerIdChanging(value);
                    ReportPropertyChanging("TrackerId");
                    _TrackerId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TrackerId");
                    OnTrackerIdChanged();
                }
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vibe
        {
            get
            {
                return _Vibe;
            }
            set
            {
                OnVibeChanging(value);
                ReportPropertyChanging("Vibe");
                _Vibe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vibe");
                OnVibeChanged();
            }
        }
        private global::System.Int32 _Vibe;
        partial void OnVibeChanging(global::System.Int32 value);
        partial void OnVibeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="LR_Passcode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LR_Passcode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LR_Passcode object.
        /// </summary>
        /// <param name="phonenumber">Initial value of the phonenumber property.</param>
        /// <param name="passcode">Initial value of the Passcode property.</param>
        public static LR_Passcode CreateLR_Passcode(global::System.String phonenumber, global::System.String passcode)
        {
            LR_Passcode lR_Passcode = new LR_Passcode();
            lR_Passcode.phonenumber = phonenumber;
            lR_Passcode.Passcode = passcode;
            return lR_Passcode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String phonenumber
        {
            get
            {
                return _phonenumber;
            }
            set
            {
                if (_phonenumber != value)
                {
                    OnphonenumberChanging(value);
                    ReportPropertyChanging("phonenumber");
                    _phonenumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("phonenumber");
                    OnphonenumberChanged();
                }
            }
        }
        private global::System.String _phonenumber;
        partial void OnphonenumberChanging(global::System.String value);
        partial void OnphonenumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Passcode
        {
            get
            {
                return _Passcode;
            }
            set
            {
                OnPasscodeChanging(value);
                ReportPropertyChanging("Passcode");
                _Passcode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Passcode");
                OnPasscodeChanged();
            }
        }
        private global::System.String _Passcode;
        partial void OnPasscodeChanging(global::System.String value);
        partial void OnPasscodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="LR_Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LR_Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LR_Status object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LR_Status CreateLR_Status(global::System.Int32 id, global::System.String name)
        {
            LR_Status lR_Status = new LR_Status();
            lR_Status.Id = id;
            lR_Status.Name = name;
            return lR_Status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="LR_Vibes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LR_Vibes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LR_Vibes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LR_Vibes CreateLR_Vibes(global::System.Int32 id, global::System.String name)
        {
            LR_Vibes lR_Vibes = new LR_Vibes();
            lR_Vibes.Id = id;
            lR_Vibes.Name = name;
            return lR_Vibes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Maintenance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Maintenance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Maintenance object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="trackerId">Initial value of the trackerId property.</param>
        /// <param name="dateTimeRecorded">Initial value of the dateTimeRecorded property.</param>
        /// <param name="mileage">Initial value of the mileage property.</param>
        /// <param name="notes">Initial value of the notes property.</param>
        public static Maintenance CreateMaintenance(global::System.Int32 id, global::System.String trackerId, global::System.DateTime dateTimeRecorded, global::System.Double mileage, global::System.String notes)
        {
            Maintenance maintenance = new Maintenance();
            maintenance.id = id;
            maintenance.trackerId = trackerId;
            maintenance.dateTimeRecorded = dateTimeRecorded;
            maintenance.mileage = mileage;
            maintenance.notes = notes;
            return maintenance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String trackerId
        {
            get
            {
                return _trackerId;
            }
            set
            {
                OntrackerIdChanging(value);
                ReportPropertyChanging("trackerId");
                _trackerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("trackerId");
                OntrackerIdChanged();
            }
        }
        private global::System.String _trackerId;
        partial void OntrackerIdChanging(global::System.String value);
        partial void OntrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateTimeRecorded
        {
            get
            {
                return _dateTimeRecorded;
            }
            set
            {
                OndateTimeRecordedChanging(value);
                ReportPropertyChanging("dateTimeRecorded");
                _dateTimeRecorded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateTimeRecorded");
                OndateTimeRecordedChanged();
            }
        }
        private global::System.DateTime _dateTimeRecorded;
        partial void OndateTimeRecordedChanging(global::System.DateTime value);
        partial void OndateTimeRecordedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double mileage
        {
            get
            {
                return _mileage;
            }
            set
            {
                OnmileageChanging(value);
                ReportPropertyChanging("mileage");
                _mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mileage");
                OnmileageChanged();
            }
        }
        private global::System.Double _mileage;
        partial void OnmileageChanging(global::System.Double value);
        partial void OnmileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String notes
        {
            get
            {
                return _notes;
            }
            set
            {
                OnnotesChanging(value);
                ReportPropertyChanging("notes");
                _notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("notes");
                OnnotesChanged();
            }
        }
        private global::System.String _notes;
        partial void OnnotesChanging(global::System.String value);
        partial void OnnotesChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="OutputStateType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OutputStateType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OutputStateType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static OutputStateType CreateOutputStateType(global::System.Int32 id, global::System.String name)
        {
            OutputStateType outputStateType = new OutputStateType();
            outputStateType.Id = id;
            outputStateType.Name = name;
            return outputStateType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="OutputTriggerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OutputTriggerType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OutputTriggerType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static OutputTriggerType CreateOutputTriggerType(global::System.Int32 id)
        {
            OutputTriggerType outputTriggerType = new OutputTriggerType();
            outputTriggerType.Id = id;
            return outputTriggerType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="SimCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SimCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimCard object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static SimCard CreateSimCard(global::System.Int32 id, global::System.String phoneNumber)
        {
            SimCard simCard = new SimCard();
            simCard.Id = id;
            simCard.PhoneNumber = phoneNumber;
            return simCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimSerial
        {
            get
            {
                return _SimSerial;
            }
            set
            {
                OnSimSerialChanging(value);
                ReportPropertyChanging("SimSerial");
                _SimSerial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimSerial");
                OnSimSerialChanged();
            }
        }
        private global::System.String _SimSerial;
        partial void OnSimSerialChanging(global::System.String value);
        partial void OnSimSerialChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Status CreateStatus(global::System.String statusId, global::System.String name)
        {
            Status status = new Status();
            status.StatusId = statusId;
            status.Name = name;
            return status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.String _StatusId;
        partial void OnStatusIdChanging(global::System.String value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerCommandLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerCommandLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerCommandLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="sent">Initial value of the Sent property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        /// <param name="trackerId">Initial value of the TrackerId property.</param>
        public static TrackerCommandLog CreateTrackerCommandLog(global::System.Int32 id, global::System.String message, global::System.Boolean sent, global::System.DateTime dateTime, global::System.String trackerId)
        {
            TrackerCommandLog trackerCommandLog = new TrackerCommandLog();
            trackerCommandLog.Id = id;
            trackerCommandLog.Message = message;
            trackerCommandLog.Sent = sent;
            trackerCommandLog.DateTime = dateTime;
            trackerCommandLog.TrackerId = trackerId;
            return trackerCommandLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sent
        {
            get
            {
                return _Sent;
            }
            set
            {
                OnSentChanging(value);
                ReportPropertyChanging("Sent");
                _Sent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sent");
                OnSentChanged();
            }
        }
        private global::System.Boolean _Sent;
        partial void OnSentChanging(global::System.Boolean value);
        partial void OnSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reply
        {
            get
            {
                return _Reply;
            }
            set
            {
                OnReplyChanging(value);
                ReportPropertyChanging("Reply");
                _Reply = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reply");
                OnReplyChanged();
            }
        }
        private global::System.String _Reply;
        partial void OnReplyChanging(global::System.String value);
        partial void OnReplyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerFenceMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerFenceMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerFenceMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static TrackerFenceMap CreateTrackerFenceMap(global::System.Int32 id)
        {
            TrackerFenceMap trackerFenceMap = new TrackerFenceMap();
            trackerFenceMap.Id = id;
            return trackerFenceMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FencesId
        {
            get
            {
                return _FencesId;
            }
            set
            {
                OnFencesIdChanging(value);
                ReportPropertyChanging("FencesId");
                _FencesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FencesId");
                OnFencesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FencesId;
        partial void OnFencesIdChanging(Nullable<global::System.Int32> value);
        partial void OnFencesIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="trackerId">Initial value of the TrackerId property.</param>
        /// <param name="trackerId2">Initial value of the TrackerId2 property.</param>
        /// <param name="linkLevel">Initial value of the LinkLevel property.</param>
        public static TrackerLink CreateTrackerLink(global::System.Int32 id, global::System.String trackerId, global::System.String trackerId2, global::System.Int32 linkLevel)
        {
            TrackerLink trackerLink = new TrackerLink();
            trackerLink.Id = id;
            trackerLink.TrackerId = trackerId;
            trackerLink.TrackerId2 = trackerId2;
            trackerLink.LinkLevel = linkLevel;
            return trackerLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId2
        {
            get
            {
                return _TrackerId2;
            }
            set
            {
                OnTrackerId2Changing(value);
                ReportPropertyChanging("TrackerId2");
                _TrackerId2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackerId2");
                OnTrackerId2Changed();
            }
        }
        private global::System.String _TrackerId2;
        partial void OnTrackerId2Changing(global::System.String value);
        partial void OnTrackerId2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkLevel
        {
            get
            {
                return _LinkLevel;
            }
            set
            {
                OnLinkLevelChanging(value);
                ReportPropertyChanging("LinkLevel");
                _LinkLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkLevel");
                OnLinkLevelChanged();
            }
        }
        private global::System.Int32 _LinkLevel;
        partial void OnLinkLevelChanging(global::System.Int32 value);
        partial void OnLinkLevelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerLinkLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerLinkLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerLinkLevel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static TrackerLinkLevel CreateTrackerLinkLevel(global::System.Int32 id, global::System.String name, global::System.String description)
        {
            TrackerLinkLevel trackerLinkLevel = new TrackerLinkLevel();
            trackerLinkLevel.Id = id;
            trackerLinkLevel.Name = name;
            trackerLinkLevel.Description = description;
            return trackerLinkLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _Description = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerOutput")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerOutput : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerOutput object.
        /// </summary>
        /// <param name="trackerId">Initial value of the TrackerId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="outputType">Initial value of the OutputType property.</param>
        /// <param name="proposedState">Initial value of the ProposedState property.</param>
        /// <param name="lastVerifiedState">Initial value of the LastVerifiedState property.</param>
        /// <param name="triggerType">Initial value of the TriggerType property.</param>
        public static TrackerOutput CreateTrackerOutput(global::System.String trackerId, global::System.Int32 number, global::System.Int32 outputType, global::System.Int32 proposedState, global::System.Int32 lastVerifiedState, global::System.Int32 triggerType)
        {
            TrackerOutput trackerOutput = new TrackerOutput();
            trackerOutput.TrackerId = trackerId;
            trackerOutput.Number = number;
            trackerOutput.OutputType = outputType;
            trackerOutput.ProposedState = proposedState;
            trackerOutput.LastVerifiedState = lastVerifiedState;
            trackerOutput.TriggerType = triggerType;
            return trackerOutput;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                if (_TrackerId != value)
                {
                    OnTrackerIdChanging(value);
                    ReportPropertyChanging("TrackerId");
                    _TrackerId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TrackerId");
                    OnTrackerIdChanged();
                }
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                if (_Number != value)
                {
                    OnNumberChanging(value);
                    ReportPropertyChanging("Number");
                    _Number = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Number");
                    OnNumberChanged();
                }
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutputType
        {
            get
            {
                return _OutputType;
            }
            set
            {
                OnOutputTypeChanging(value);
                ReportPropertyChanging("OutputType");
                _OutputType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputType");
                OnOutputTypeChanged();
            }
        }
        private global::System.Int32 _OutputType;
        partial void OnOutputTypeChanging(global::System.Int32 value);
        partial void OnOutputTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProposedState
        {
            get
            {
                return _ProposedState;
            }
            set
            {
                OnProposedStateChanging(value);
                ReportPropertyChanging("ProposedState");
                _ProposedState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProposedState");
                OnProposedStateChanged();
            }
        }
        private global::System.Int32 _ProposedState;
        partial void OnProposedStateChanging(global::System.Int32 value);
        partial void OnProposedStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastVerifiedState
        {
            get
            {
                return _LastVerifiedState;
            }
            set
            {
                OnLastVerifiedStateChanging(value);
                ReportPropertyChanging("LastVerifiedState");
                _LastVerifiedState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastVerifiedState");
                OnLastVerifiedStateChanged();
            }
        }
        private global::System.Int32 _LastVerifiedState;
        partial void OnLastVerifiedStateChanging(global::System.Int32 value);
        partial void OnLastVerifiedStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TriggerType
        {
            get
            {
                return _TriggerType;
            }
            set
            {
                OnTriggerTypeChanging(value);
                ReportPropertyChanging("TriggerType");
                _TriggerType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TriggerType");
                OnTriggerTypeChanged();
            }
        }
        private global::System.Int32 _TriggerType;
        partial void OnTriggerTypeChanging(global::System.Int32 value);
        partial void OnTriggerTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerOutputType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerOutputType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerOutputType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TrackerOutputType CreateTrackerOutputType(global::System.Int32 id, global::System.String name)
        {
            TrackerOutputType trackerOutputType = new TrackerOutputType();
            trackerOutputType.Id = id;
            trackerOutputType.Name = name;
            return trackerOutputType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Trackers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trackers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trackers object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Trackers CreateTrackers(global::System.String id, global::System.String name, global::System.String type, global::System.String status)
        {
            Trackers trackers = new Trackers();
            trackers.Id = id;
            trackers.Name = name;
            trackers.Type = type;
            trackers.Status = status;
            return trackers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Serial
        {
            get
            {
                return _Serial;
            }
            set
            {
                OnSerialChanging(value);
                ReportPropertyChanging("Serial");
                _Serial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Serial");
                OnSerialChanged();
            }
        }
        private global::System.String _Serial;
        partial void OnSerialChanging(global::System.String value);
        partial void OnSerialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorizedNumbers
        {
            get
            {
                return _AuthorizedNumbers;
            }
            set
            {
                OnAuthorizedNumbersChanging(value);
                ReportPropertyChanging("AuthorizedNumbers");
                _AuthorizedNumbers = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuthorizedNumbers");
                OnAuthorizedNumbersChanged();
            }
        }
        private global::System.String _AuthorizedNumbers;
        partial void OnAuthorizedNumbersChanging(global::System.String value);
        partial void OnAuthorizedNumbersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdate;
        partial void OnLastUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HistoryRetension
        {
            get
            {
                return _HistoryRetension;
            }
            set
            {
                OnHistoryRetensionChanging(value);
                ReportPropertyChanging("HistoryRetension");
                _HistoryRetension = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HistoryRetension");
                OnHistoryRetensionChanged();
            }
        }
        private Nullable<global::System.Int32> _HistoryRetension;
        partial void OnHistoryRetensionChanging(Nullable<global::System.Int32> value);
        partial void OnHistoryRetensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastLat
        {
            get
            {
                return _LastLat;
            }
            set
            {
                OnLastLatChanging(value);
                ReportPropertyChanging("LastLat");
                _LastLat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLat");
                OnLastLatChanged();
            }
        }
        private Nullable<global::System.Double> _LastLat;
        partial void OnLastLatChanging(Nullable<global::System.Double> value);
        partial void OnLastLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastLon
        {
            get
            {
                return _LastLon;
            }
            set
            {
                OnLastLonChanging(value);
                ReportPropertyChanging("LastLon");
                _LastLon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLon");
                OnLastLonChanged();
            }
        }
        private Nullable<global::System.Double> _LastLon;
        partial void OnLastLonChanging(Nullable<global::System.Double> value);
        partial void OnLastLonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastLocationId
        {
            get
            {
                return _LastLocationId;
            }
            set
            {
                OnLastLocationIdChanging(value);
                ReportPropertyChanging("LastLocationId");
                _LastLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLocationId");
                OnLastLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastLocationId;
        partial void OnLastLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerPicture
        {
            get
            {
                return _TrackerPicture;
            }
            set
            {
                OnTrackerPictureChanging(value);
                ReportPropertyChanging("TrackerPicture");
                _TrackerPicture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerPicture");
                OnTrackerPictureChanged();
            }
        }
        private global::System.String _TrackerPicture;
        partial void OnTrackerPictureChanging(global::System.String value);
        partial void OnTrackerPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private Nullable<global::System.Double> _Mileage;
        partial void OnMileageChanging(Nullable<global::System.Double> value);
        partial void OnMileageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerSim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerSim : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerSim object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="trackerId">Initial value of the TrackerId property.</param>
        /// <param name="simId">Initial value of the SimId property.</param>
        /// <param name="datePaired">Initial value of the DatePaired property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TrackerSim CreateTrackerSim(global::System.Int32 id, global::System.String trackerId, global::System.Int32 simId, global::System.DateTime datePaired, global::System.Boolean isActive)
        {
            TrackerSim trackerSim = new TrackerSim();
            trackerSim.Id = id;
            trackerSim.TrackerId = trackerId;
            trackerSim.SimId = simId;
            trackerSim.DatePaired = datePaired;
            trackerSim.IsActive = isActive;
            return trackerSim;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SimId
        {
            get
            {
                return _SimId;
            }
            set
            {
                OnSimIdChanging(value);
                ReportPropertyChanging("SimId");
                _SimId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimId");
                OnSimIdChanged();
            }
        }
        private global::System.Int32 _SimId;
        partial void OnSimIdChanging(global::System.Int32 value);
        partial void OnSimIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatePaired
        {
            get
            {
                return _DatePaired;
            }
            set
            {
                OnDatePairedChanging(value);
                ReportPropertyChanging("DatePaired");
                _DatePaired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePaired");
                OnDatePairedChanged();
            }
        }
        private global::System.DateTime _DatePaired;
        partial void OnDatePairedChanging(global::System.DateTime value);
        partial void OnDatePairedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerType object.
        /// </summary>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TrackerType CreateTrackerType(global::System.String typeId, global::System.String name)
        {
            TrackerType trackerType = new TrackerType();
            trackerType.TypeId = typeId;
            trackerType.Name = name;
            return trackerType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                if (_TypeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _TypeId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }
        private global::System.String _TypeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="trackerId">Initial value of the TrackerId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TrackerUser CreateTrackerUser(global::System.Int32 id, global::System.String trackerId, global::System.Guid userId, global::System.Boolean isActive)
        {
            TrackerUser trackerUser = new TrackerUser();
            trackerUser.Id = id;
            trackerUser.TrackerId = trackerId;
            trackerUser.UserId = userId;
            trackerUser.IsActive = isActive;
            return trackerUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateBinded
        {
            get
            {
                return _DateBinded;
            }
            set
            {
                OnDateBindedChanging(value);
                ReportPropertyChanging("DateBinded");
                _DateBinded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateBinded");
                OnDateBindedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateBinded;
        partial void OnDateBindedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateBindedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="TrackerVehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackerVehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackerVehicle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        /// <param name="trackerId">Initial value of the TrackerId property.</param>
        /// <param name="dateInstalled">Initial value of the DateInstalled property.</param>
        public static TrackerVehicle CreateTrackerVehicle(global::System.Int32 id, global::System.Int32 vehicleId, global::System.String trackerId, global::System.DateTime dateInstalled)
        {
            TrackerVehicle trackerVehicle = new TrackerVehicle();
            trackerVehicle.Id = id;
            trackerVehicle.VehicleId = vehicleId;
            trackerVehicle.TrackerId = trackerId;
            trackerVehicle.DateInstalled = dateInstalled;
            return trackerVehicle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateInstalled
        {
            get
            {
                return _DateInstalled;
            }
            set
            {
                OnDateInstalledChanging(value);
                ReportPropertyChanging("DateInstalled");
                _DateInstalled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInstalled");
                OnDateInstalledChanged();
            }
        }
        private global::System.DateTime _DateInstalled;
        partial void OnDateInstalledChanging(global::System.DateTime value);
        partial void OnDateInstalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="UserFenceMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFenceMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserFenceMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static UserFenceMap CreateUserFenceMap(global::System.Int32 id)
        {
            UserFenceMap userFenceMap = new UserFenceMap();
            userFenceMap.Id = id;
            return userFenceMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FencesId
        {
            get
            {
                return _FencesId;
            }
            set
            {
                OnFencesIdChanging(value);
                ReportPropertyChanging("FencesId");
                _FencesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FencesId");
                OnFencesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FencesId;
        partial void OnFencesIdChanging(Nullable<global::System.Int32> value);
        partial void OnFencesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="registrationNumber">Initial value of the RegistrationNumber property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="make">Initial value of the Make property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="manufactureDate">Initial value of the ManufactureDate property.</param>
        /// <param name="serialNumber">Initial value of the SerialNumber property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 id, global::System.String registrationNumber, global::System.String color, global::System.String make, global::System.String model, global::System.DateTime manufactureDate, global::System.String serialNumber)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.Id = id;
            vehicle.RegistrationNumber = registrationNumber;
            vehicle.Color = color;
            vehicle.Make = make;
            vehicle.Model = model;
            vehicle.ManufactureDate = manufactureDate;
            vehicle.SerialNumber = serialNumber;
            return vehicle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegistrationNumber
        {
            get
            {
                return _RegistrationNumber;
            }
            set
            {
                OnRegistrationNumberChanging(value);
                ReportPropertyChanging("RegistrationNumber");
                _RegistrationNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegistrationNumber");
                OnRegistrationNumberChanged();
            }
        }
        private global::System.String _RegistrationNumber;
        partial void OnRegistrationNumberChanging(global::System.String value);
        partial void OnRegistrationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Make
        {
            get
            {
                return _Make;
            }
            set
            {
                OnMakeChanging(value);
                ReportPropertyChanging("Make");
                _Make = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Make");
                OnMakeChanged();
            }
        }
        private global::System.String _Make;
        partial void OnMakeChanging(global::System.String value);
        partial void OnMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ManufactureDate
        {
            get
            {
                return _ManufactureDate;
            }
            set
            {
                OnManufactureDateChanging(value);
                ReportPropertyChanging("ManufactureDate");
                _ManufactureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufactureDate");
                OnManufactureDateChanged();
            }
        }
        private global::System.DateTime _ManufactureDate;
        partial void OnManufactureDateChanging(global::System.DateTime value);
        partial void OnManufactureDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static vw_aspnet_Applications Createvw_aspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            vw_aspnet_Applications vw_aspnet_Applications = new vw_aspnet_Applications();
            vw_aspnet_Applications.ApplicationName = applicationName;
            vw_aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            vw_aspnet_Applications.ApplicationId = applicationId;
            return vw_aspnet_Applications;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                if (_LoweredApplicationName != value)
                {
                    OnLoweredApplicationNameChanging(value);
                    ReportPropertyChanging("LoweredApplicationName");
                    _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredApplicationName");
                    OnLoweredApplicationNameChanged();
                }
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_MembershipUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_MembershipUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_MembershipUsers object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_MembershipUsers Createvw_aspnet_MembershipUsers(global::System.Guid userId, global::System.Int32 passwordFormat, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart, global::System.Guid applicationId, global::System.String userName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers = new vw_aspnet_MembershipUsers();
            vw_aspnet_MembershipUsers.UserId = userId;
            vw_aspnet_MembershipUsers.PasswordFormat = passwordFormat;
            vw_aspnet_MembershipUsers.IsApproved = isApproved;
            vw_aspnet_MembershipUsers.IsLockedOut = isLockedOut;
            vw_aspnet_MembershipUsers.CreateDate = createDate;
            vw_aspnet_MembershipUsers.LastLoginDate = lastLoginDate;
            vw_aspnet_MembershipUsers.LastPasswordChangedDate = lastPasswordChangedDate;
            vw_aspnet_MembershipUsers.LastLockoutDate = lastLockoutDate;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            vw_aspnet_MembershipUsers.ApplicationId = applicationId;
            vw_aspnet_MembershipUsers.UserName = userName;
            vw_aspnet_MembershipUsers.IsAnonymous = isAnonymous;
            vw_aspnet_MembershipUsers.LastActivityDate = lastActivityDate;
            return vw_aspnet_MembershipUsers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                if (_PasswordFormat != value)
                {
                    OnPasswordFormatChanging(value);
                    ReportPropertyChanging("PasswordFormat");
                    _PasswordFormat = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PasswordFormat");
                    OnPasswordFormatChanged();
                }
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                if (_IsApproved != value)
                {
                    OnIsApprovedChanging(value);
                    ReportPropertyChanging("IsApproved");
                    _IsApproved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                if (_IsLockedOut != value)
                {
                    OnIsLockedOutChanging(value);
                    ReportPropertyChanging("IsLockedOut");
                    _IsLockedOut = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsLockedOut");
                    OnIsLockedOutChanged();
                }
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                if (_CreateDate != value)
                {
                    OnCreateDateChanging(value);
                    ReportPropertyChanging("CreateDate");
                    _CreateDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreateDate");
                    OnCreateDateChanged();
                }
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                    OnLastLoginDateChanging(value);
                    ReportPropertyChanging("LastLoginDate");
                    _LastLoginDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLoginDate");
                    OnLastLoginDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                if (_LastPasswordChangedDate != value)
                {
                    OnLastPasswordChangedDateChanging(value);
                    ReportPropertyChanging("LastPasswordChangedDate");
                    _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastPasswordChangedDate");
                    OnLastPasswordChangedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                if (_LastLockoutDate != value)
                {
                    OnLastLockoutDateChanging(value);
                    ReportPropertyChanging("LastLockoutDate");
                    _LastLockoutDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLockoutDate");
                    OnLastLockoutDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                if (_FailedPasswordAttemptCount != value)
                {
                    OnFailedPasswordAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptCount");
                    _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptCount");
                    OnFailedPasswordAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAttemptWindowStart != value)
                {
                    OnFailedPasswordAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                    _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                    OnFailedPasswordAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptCount != value)
                {
                    OnFailedPasswordAnswerAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                    _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                    OnFailedPasswordAnswerAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptWindowStart != value)
                {
                    OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                    _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                    OnFailedPasswordAnswerAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_Profiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Profiles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Profiles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_Profiles Createvw_aspnet_Profiles(global::System.Guid userId, global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_Profiles vw_aspnet_Profiles = new vw_aspnet_Profiles();
            vw_aspnet_Profiles.UserId = userId;
            vw_aspnet_Profiles.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_Profiles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static vw_aspnet_Roles Createvw_aspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            vw_aspnet_Roles vw_aspnet_Roles = new vw_aspnet_Roles();
            vw_aspnet_Roles.ApplicationId = applicationId;
            vw_aspnet_Roles.RoleId = roleId;
            vw_aspnet_Roles.RoleName = roleName;
            vw_aspnet_Roles.LoweredRoleName = loweredRoleName;
            return vw_aspnet_Roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                if (_LoweredRoleName != value)
                {
                    OnLoweredRoleNameChanging(value);
                    ReportPropertyChanging("LoweredRoleName");
                    _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredRoleName");
                    OnLoweredRoleNameChanged();
                }
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_Users Createvw_aspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_Users vw_aspnet_Users = new vw_aspnet_Users();
            vw_aspnet_Users.ApplicationId = applicationId;
            vw_aspnet_Users.UserId = userId;
            vw_aspnet_Users.UserName = userName;
            vw_aspnet_Users.LoweredUserName = loweredUserName;
            vw_aspnet_Users.IsAnonymous = isAnonymous;
            vw_aspnet_Users.LastActivityDate = lastActivityDate;
            return vw_aspnet_Users;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                if (_LoweredUserName != value)
                {
                    OnLoweredUserNameChanging(value);
                    ReportPropertyChanging("LoweredUserName");
                    _LoweredUserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredUserName");
                    OnLoweredUserNameChanged();
                }
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_UsersInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_UsersInRoles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static vw_aspnet_UsersInRoles Createvw_aspnet_UsersInRoles(global::System.Guid userId, global::System.Guid roleId)
        {
            vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles = new vw_aspnet_UsersInRoles();
            vw_aspnet_UsersInRoles.UserId = userId;
            vw_aspnet_UsersInRoles.RoleId = roleId;
            return vw_aspnet_UsersInRoles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_WebPartState_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static vw_aspnet_WebPartState_Paths Createvw_aspnet_WebPartState_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            vw_aspnet_WebPartState_Paths vw_aspnet_WebPartState_Paths = new vw_aspnet_WebPartState_Paths();
            vw_aspnet_WebPartState_Paths.ApplicationId = applicationId;
            vw_aspnet_WebPartState_Paths.PathId = pathId;
            vw_aspnet_WebPartState_Paths.Path = path;
            vw_aspnet_WebPartState_Paths.LoweredPath = loweredPath;
            return vw_aspnet_WebPartState_Paths;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                if (_Path != value)
                {
                    OnPathChanging(value);
                    ReportPropertyChanging("Path");
                    _Path = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Path");
                    OnPathChanged();
                }
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                if (_LoweredPath != value)
                {
                    OnLoweredPathChanging(value);
                    ReportPropertyChanging("LoweredPath");
                    _LoweredPath = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredPath");
                    OnLoweredPathChanged();
                }
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_WebPartState_Shared")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_Shared : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_Shared object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_WebPartState_Shared Createvw_aspnet_WebPartState_Shared(global::System.Guid pathId, global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_WebPartState_Shared vw_aspnet_WebPartState_Shared = new vw_aspnet_WebPartState_Shared();
            vw_aspnet_WebPartState_Shared.PathId = pathId;
            vw_aspnet_WebPartState_Shared.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_WebPartState_Shared;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GPSTrackerModel", Name="vw_aspnet_WebPartState_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_User object.
        /// </summary>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_WebPartState_User Createvw_aspnet_WebPartState_User(global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_WebPartState_User vw_aspnet_WebPartState_User = new vw_aspnet_WebPartState_User();
            vw_aspnet_WebPartState_User.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_WebPartState_User;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Membership_GetPassword_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class aspnet_Membership_GetPassword_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.String _Column1;
        partial void OnColumn1Changing(global::System.String value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Column2
        {
            get
            {
                return _Column2;
            }
            set
            {
                OnColumn2Changing(value);
                ReportPropertyChanging("Column2");
                _Column2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column2");
                OnColumn2Changed();
            }
        }
        private Nullable<global::System.Int32> _Column2;
        partial void OnColumn2Changing(Nullable<global::System.Int32> value);
        partial void OnColumn2Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Membership_GetPasswordWithFormat_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class aspnet_Membership_GetPasswordWithFormat_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.String _Column1;
        partial void OnColumn1Changing(global::System.String value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Column2
        {
            get
            {
                return _Column2;
            }
            set
            {
                OnColumn2Changing(value);
                ReportPropertyChanging("Column2");
                _Column2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column2");
                OnColumn2Changed();
            }
        }
        private Nullable<global::System.Int32> _Column2;
        partial void OnColumn2Changing(Nullable<global::System.Int32> value);
        partial void OnColumn2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Column3
        {
            get
            {
                return _Column3;
            }
            set
            {
                OnColumn3Changing(value);
                ReportPropertyChanging("Column3");
                _Column3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Column3");
                OnColumn3Changed();
            }
        }
        private global::System.String _Column3;
        partial void OnColumn3Changing(global::System.String value);
        partial void OnColumn3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Column4
        {
            get
            {
                return _Column4;
            }
            set
            {
                OnColumn4Changing(value);
                ReportPropertyChanging("Column4");
                _Column4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column4");
                OnColumn4Changed();
            }
        }
        private Nullable<global::System.Int32> _Column4;
        partial void OnColumn4Changing(Nullable<global::System.Int32> value);
        partial void OnColumn4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Column5
        {
            get
            {
                return _Column5;
            }
            set
            {
                OnColumn5Changing(value);
                ReportPropertyChanging("Column5");
                _Column5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column5");
                OnColumn5Changed();
            }
        }
        private Nullable<global::System.Int32> _Column5;
        partial void OnColumn5Changing(Nullable<global::System.Int32> value);
        partial void OnColumn5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Column6
        {
            get
            {
                return _Column6;
            }
            set
            {
                OnColumn6Changing(value);
                ReportPropertyChanging("Column6");
                _Column6 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column6");
                OnColumn6Changed();
            }
        }
        private Nullable<global::System.Boolean> _Column6;
        partial void OnColumn6Changing(Nullable<global::System.Boolean> value);
        partial void OnColumn6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Column7
        {
            get
            {
                return _Column7;
            }
            set
            {
                OnColumn7Changing(value);
                ReportPropertyChanging("Column7");
                _Column7 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column7");
                OnColumn7Changed();
            }
        }
        private Nullable<global::System.DateTime> _Column7;
        partial void OnColumn7Changing(Nullable<global::System.DateTime> value);
        partial void OnColumn7Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Column8
        {
            get
            {
                return _Column8;
            }
            set
            {
                OnColumn8Changing(value);
                ReportPropertyChanging("Column8");
                _Column8 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column8");
                OnColumn8Changed();
            }
        }
        private Nullable<global::System.DateTime> _Column8;
        partial void OnColumn8Changing(Nullable<global::System.DateTime> value);
        partial void OnColumn8Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Membership_GetUserByName_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class aspnet_Membership_GetUserByName_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership_GetUserByName_Result object.
        /// </summary>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        public static aspnet_Membership_GetUserByName_Result Createaspnet_Membership_GetUserByName_Result(global::System.Boolean isApproved, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastActivityDate, global::System.DateTime lastPasswordChangedDate, global::System.Guid userId, global::System.Boolean isLockedOut, global::System.DateTime lastLockoutDate)
        {
            aspnet_Membership_GetUserByName_Result aspnet_Membership_GetUserByName_Result = new aspnet_Membership_GetUserByName_Result();
            aspnet_Membership_GetUserByName_Result.IsApproved = isApproved;
            aspnet_Membership_GetUserByName_Result.CreateDate = createDate;
            aspnet_Membership_GetUserByName_Result.LastLoginDate = lastLoginDate;
            aspnet_Membership_GetUserByName_Result.LastActivityDate = lastActivityDate;
            aspnet_Membership_GetUserByName_Result.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership_GetUserByName_Result.UserId = userId;
            aspnet_Membership_GetUserByName_Result.IsLockedOut = isLockedOut;
            aspnet_Membership_GetUserByName_Result.LastLockoutDate = lastLockoutDate;
            return aspnet_Membership_GetUserByName_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Membership_GetUserByUserId_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class aspnet_Membership_GetUserByUserId_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership_GetUserByUserId_Result object.
        /// </summary>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        public static aspnet_Membership_GetUserByUserId_Result Createaspnet_Membership_GetUserByUserId_Result(global::System.Boolean isApproved, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastActivityDate, global::System.DateTime lastPasswordChangedDate, global::System.String userName, global::System.Boolean isLockedOut, global::System.DateTime lastLockoutDate)
        {
            aspnet_Membership_GetUserByUserId_Result aspnet_Membership_GetUserByUserId_Result = new aspnet_Membership_GetUserByUserId_Result();
            aspnet_Membership_GetUserByUserId_Result.IsApproved = isApproved;
            aspnet_Membership_GetUserByUserId_Result.CreateDate = createDate;
            aspnet_Membership_GetUserByUserId_Result.LastLoginDate = lastLoginDate;
            aspnet_Membership_GetUserByUserId_Result.LastActivityDate = lastActivityDate;
            aspnet_Membership_GetUserByUserId_Result.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership_GetUserByUserId_Result.UserName = userName;
            aspnet_Membership_GetUserByUserId_Result.IsLockedOut = isLockedOut;
            aspnet_Membership_GetUserByUserId_Result.LastLockoutDate = lastLockoutDate;
            return aspnet_Membership_GetUserByUserId_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_Profile_GetProperties_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class aspnet_Profile_GetProperties_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Profile_GetProperties_Result object.
        /// </summary>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValuesString">Initial value of the PropertyValuesString property.</param>
        public static aspnet_Profile_GetProperties_Result Createaspnet_Profile_GetProperties_Result(global::System.String propertyNames, global::System.String propertyValuesString)
        {
            aspnet_Profile_GetProperties_Result aspnet_Profile_GetProperties_Result = new aspnet_Profile_GetProperties_Result();
            aspnet_Profile_GetProperties_Result.PropertyNames = propertyNames;
            aspnet_Profile_GetProperties_Result.PropertyValuesString = propertyValuesString;
            return aspnet_Profile_GetProperties_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValuesString
        {
            get
            {
                return _PropertyValuesString;
            }
            set
            {
                OnPropertyValuesStringChanging(value);
                ReportPropertyChanging("PropertyValuesString");
                _PropertyValuesString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesString");
                OnPropertyValuesStringChanged();
            }
        }
        private global::System.String _PropertyValuesString;
        partial void OnPropertyValuesStringChanging(global::System.String value);
        partial void OnPropertyValuesStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValuesBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValuesBinary);
            }
            set
            {
                OnPropertyValuesBinaryChanging(value);
                ReportPropertyChanging("PropertyValuesBinary");
                _PropertyValuesBinary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PropertyValuesBinary");
                OnPropertyValuesBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValuesBinary;
        partial void OnPropertyValuesBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValuesBinaryChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="aspnet_UsersInRoles_RemoveUsersFromRoles_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class aspnet_UsersInRoles_RemoveUsersFromRoles_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_UsersInRoles_RemoveUsersFromRoles_Result object.
        /// </summary>
        /// <param name="column1">Initial value of the Column1 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static aspnet_UsersInRoles_RemoveUsersFromRoles_Result Createaspnet_UsersInRoles_RemoveUsersFromRoles_Result(global::System.String column1, global::System.String name)
        {
            aspnet_UsersInRoles_RemoveUsersFromRoles_Result aspnet_UsersInRoles_RemoveUsersFromRoles_Result = new aspnet_UsersInRoles_RemoveUsersFromRoles_Result();
            aspnet_UsersInRoles_RemoveUsersFromRoles_Result.Column1 = column1;
            aspnet_UsersInRoles_RemoveUsersFromRoles_Result.Name = name;
            return aspnet_UsersInRoles_RemoveUsersFromRoles_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.String _Column1;
        partial void OnColumn1Changing(global::System.String value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="usp_LocationMessagesInsert_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_LocationMessagesInsert_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_LocationMessagesInsert_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rawTextData">Initial value of the RawTextData property.</param>
        /// <param name="latDegrees">Initial value of the LatDegrees property.</param>
        /// <param name="latMinutes">Initial value of the LatMinutes property.</param>
        /// <param name="latSeconds">Initial value of the LatSeconds property.</param>
        /// <param name="lngDegrees">Initial value of the LngDegrees property.</param>
        /// <param name="lngMinutes">Initial value of the LngMinutes property.</param>
        /// <param name="lngSeconds">Initial value of the LngSeconds property.</param>
        /// <param name="serverTime">Initial value of the ServerTime property.</param>
        /// <param name="latitudeHeading">Initial value of the LatitudeHeading property.</param>
        /// <param name="longitudeHeading">Initial value of the LongitudeHeading property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        /// <param name="idleTime">Initial value of the IdleTime property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        public static usp_LocationMessagesInsert_Result Createusp_LocationMessagesInsert_Result(global::System.Int32 id, global::System.String rawTextData, global::System.Int32 latDegrees, global::System.Int32 latMinutes, global::System.Double latSeconds, global::System.Int32 lngDegrees, global::System.Int32 lngMinutes, global::System.Double lngSeconds, global::System.DateTime serverTime, global::System.String latitudeHeading, global::System.String longitudeHeading, global::System.Double speed, global::System.Int64 idleTime, global::System.Double direction)
        {
            usp_LocationMessagesInsert_Result usp_LocationMessagesInsert_Result = new usp_LocationMessagesInsert_Result();
            usp_LocationMessagesInsert_Result.Id = id;
            usp_LocationMessagesInsert_Result.RawTextData = rawTextData;
            usp_LocationMessagesInsert_Result.LatDegrees = latDegrees;
            usp_LocationMessagesInsert_Result.LatMinutes = latMinutes;
            usp_LocationMessagesInsert_Result.LatSeconds = latSeconds;
            usp_LocationMessagesInsert_Result.LngDegrees = lngDegrees;
            usp_LocationMessagesInsert_Result.LngMinutes = lngMinutes;
            usp_LocationMessagesInsert_Result.LngSeconds = lngSeconds;
            usp_LocationMessagesInsert_Result.ServerTime = serverTime;
            usp_LocationMessagesInsert_Result.LatitudeHeading = latitudeHeading;
            usp_LocationMessagesInsert_Result.LongitudeHeading = longitudeHeading;
            usp_LocationMessagesInsert_Result.Speed = speed;
            usp_LocationMessagesInsert_Result.IdleTime = idleTime;
            usp_LocationMessagesInsert_Result.Direction = direction;
            return usp_LocationMessagesInsert_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RawTextData
        {
            get
            {
                return _RawTextData;
            }
            set
            {
                OnRawTextDataChanging(value);
                ReportPropertyChanging("RawTextData");
                _RawTextData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RawTextData");
                OnRawTextDataChanged();
            }
        }
        private global::System.String _RawTextData;
        partial void OnRawTextDataChanging(global::System.String value);
        partial void OnRawTextDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatDegrees
        {
            get
            {
                return _LatDegrees;
            }
            set
            {
                OnLatDegreesChanging(value);
                ReportPropertyChanging("LatDegrees");
                _LatDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatDegrees");
                OnLatDegreesChanged();
            }
        }
        private global::System.Int32 _LatDegrees;
        partial void OnLatDegreesChanging(global::System.Int32 value);
        partial void OnLatDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatMinutes
        {
            get
            {
                return _LatMinutes;
            }
            set
            {
                OnLatMinutesChanging(value);
                ReportPropertyChanging("LatMinutes");
                _LatMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatMinutes");
                OnLatMinutesChanged();
            }
        }
        private global::System.Int32 _LatMinutes;
        partial void OnLatMinutesChanging(global::System.Int32 value);
        partial void OnLatMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LatSeconds
        {
            get
            {
                return _LatSeconds;
            }
            set
            {
                OnLatSecondsChanging(value);
                ReportPropertyChanging("LatSeconds");
                _LatSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatSeconds");
                OnLatSecondsChanged();
            }
        }
        private global::System.Double _LatSeconds;
        partial void OnLatSecondsChanging(global::System.Double value);
        partial void OnLatSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngDegrees
        {
            get
            {
                return _LngDegrees;
            }
            set
            {
                OnLngDegreesChanging(value);
                ReportPropertyChanging("LngDegrees");
                _LngDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngDegrees");
                OnLngDegreesChanged();
            }
        }
        private global::System.Int32 _LngDegrees;
        partial void OnLngDegreesChanging(global::System.Int32 value);
        partial void OnLngDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngMinutes
        {
            get
            {
                return _LngMinutes;
            }
            set
            {
                OnLngMinutesChanging(value);
                ReportPropertyChanging("LngMinutes");
                _LngMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngMinutes");
                OnLngMinutesChanged();
            }
        }
        private global::System.Int32 _LngMinutes;
        partial void OnLngMinutesChanging(global::System.Int32 value);
        partial void OnLngMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LngSeconds
        {
            get
            {
                return _LngSeconds;
            }
            set
            {
                OnLngSecondsChanging(value);
                ReportPropertyChanging("LngSeconds");
                _LngSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngSeconds");
                OnLngSecondsChanged();
            }
        }
        private global::System.Double _LngSeconds;
        partial void OnLngSecondsChanging(global::System.Double value);
        partial void OnLngSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServerTime
        {
            get
            {
                return _ServerTime;
            }
            set
            {
                OnServerTimeChanging(value);
                ReportPropertyChanging("ServerTime");
                _ServerTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerTime");
                OnServerTimeChanged();
            }
        }
        private global::System.DateTime _ServerTime;
        partial void OnServerTimeChanging(global::System.DateTime value);
        partial void OnServerTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LatitudeHeading
        {
            get
            {
                return _LatitudeHeading;
            }
            set
            {
                OnLatitudeHeadingChanging(value);
                ReportPropertyChanging("LatitudeHeading");
                _LatitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LatitudeHeading");
                OnLatitudeHeadingChanged();
            }
        }
        private global::System.String _LatitudeHeading;
        partial void OnLatitudeHeadingChanging(global::System.String value);
        partial void OnLatitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongitudeHeading
        {
            get
            {
                return _LongitudeHeading;
            }
            set
            {
                OnLongitudeHeadingChanging(value);
                ReportPropertyChanging("LongitudeHeading");
                _LongitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongitudeHeading");
                OnLongitudeHeadingChanged();
            }
        }
        private global::System.String _LongitudeHeading;
        partial void OnLongitudeHeadingChanging(global::System.String value);
        partial void OnLongitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Double _Speed;
        partial void OnSpeedChanging(global::System.Double value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdleTime
        {
            get
            {
                return _IdleTime;
            }
            set
            {
                OnIdleTimeChanging(value);
                ReportPropertyChanging("IdleTime");
                _IdleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdleTime");
                OnIdleTimeChanged();
            }
        }
        private global::System.Int64 _IdleTime;
        partial void OnIdleTimeChanging(global::System.Int64 value);
        partial void OnIdleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.Double _Direction;
        partial void OnDirectionChanging(global::System.Double value);
        partial void OnDirectionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="usp_LocationMessagesSelect_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_LocationMessagesSelect_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_LocationMessagesSelect_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rawTextData">Initial value of the RawTextData property.</param>
        /// <param name="latDegrees">Initial value of the LatDegrees property.</param>
        /// <param name="latMinutes">Initial value of the LatMinutes property.</param>
        /// <param name="latSeconds">Initial value of the LatSeconds property.</param>
        /// <param name="lngDegrees">Initial value of the LngDegrees property.</param>
        /// <param name="lngMinutes">Initial value of the LngMinutes property.</param>
        /// <param name="lngSeconds">Initial value of the LngSeconds property.</param>
        /// <param name="serverTime">Initial value of the ServerTime property.</param>
        /// <param name="latitudeHeading">Initial value of the LatitudeHeading property.</param>
        /// <param name="longitudeHeading">Initial value of the LongitudeHeading property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        /// <param name="idleTime">Initial value of the IdleTime property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        public static usp_LocationMessagesSelect_Result Createusp_LocationMessagesSelect_Result(global::System.Int32 id, global::System.String rawTextData, global::System.Int32 latDegrees, global::System.Int32 latMinutes, global::System.Double latSeconds, global::System.Int32 lngDegrees, global::System.Int32 lngMinutes, global::System.Double lngSeconds, global::System.DateTime serverTime, global::System.String latitudeHeading, global::System.String longitudeHeading, global::System.Double speed, global::System.Int64 idleTime, global::System.Double direction)
        {
            usp_LocationMessagesSelect_Result usp_LocationMessagesSelect_Result = new usp_LocationMessagesSelect_Result();
            usp_LocationMessagesSelect_Result.Id = id;
            usp_LocationMessagesSelect_Result.RawTextData = rawTextData;
            usp_LocationMessagesSelect_Result.LatDegrees = latDegrees;
            usp_LocationMessagesSelect_Result.LatMinutes = latMinutes;
            usp_LocationMessagesSelect_Result.LatSeconds = latSeconds;
            usp_LocationMessagesSelect_Result.LngDegrees = lngDegrees;
            usp_LocationMessagesSelect_Result.LngMinutes = lngMinutes;
            usp_LocationMessagesSelect_Result.LngSeconds = lngSeconds;
            usp_LocationMessagesSelect_Result.ServerTime = serverTime;
            usp_LocationMessagesSelect_Result.LatitudeHeading = latitudeHeading;
            usp_LocationMessagesSelect_Result.LongitudeHeading = longitudeHeading;
            usp_LocationMessagesSelect_Result.Speed = speed;
            usp_LocationMessagesSelect_Result.IdleTime = idleTime;
            usp_LocationMessagesSelect_Result.Direction = direction;
            return usp_LocationMessagesSelect_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RawTextData
        {
            get
            {
                return _RawTextData;
            }
            set
            {
                OnRawTextDataChanging(value);
                ReportPropertyChanging("RawTextData");
                _RawTextData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RawTextData");
                OnRawTextDataChanged();
            }
        }
        private global::System.String _RawTextData;
        partial void OnRawTextDataChanging(global::System.String value);
        partial void OnRawTextDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatDegrees
        {
            get
            {
                return _LatDegrees;
            }
            set
            {
                OnLatDegreesChanging(value);
                ReportPropertyChanging("LatDegrees");
                _LatDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatDegrees");
                OnLatDegreesChanged();
            }
        }
        private global::System.Int32 _LatDegrees;
        partial void OnLatDegreesChanging(global::System.Int32 value);
        partial void OnLatDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatMinutes
        {
            get
            {
                return _LatMinutes;
            }
            set
            {
                OnLatMinutesChanging(value);
                ReportPropertyChanging("LatMinutes");
                _LatMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatMinutes");
                OnLatMinutesChanged();
            }
        }
        private global::System.Int32 _LatMinutes;
        partial void OnLatMinutesChanging(global::System.Int32 value);
        partial void OnLatMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LatSeconds
        {
            get
            {
                return _LatSeconds;
            }
            set
            {
                OnLatSecondsChanging(value);
                ReportPropertyChanging("LatSeconds");
                _LatSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatSeconds");
                OnLatSecondsChanged();
            }
        }
        private global::System.Double _LatSeconds;
        partial void OnLatSecondsChanging(global::System.Double value);
        partial void OnLatSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngDegrees
        {
            get
            {
                return _LngDegrees;
            }
            set
            {
                OnLngDegreesChanging(value);
                ReportPropertyChanging("LngDegrees");
                _LngDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngDegrees");
                OnLngDegreesChanged();
            }
        }
        private global::System.Int32 _LngDegrees;
        partial void OnLngDegreesChanging(global::System.Int32 value);
        partial void OnLngDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngMinutes
        {
            get
            {
                return _LngMinutes;
            }
            set
            {
                OnLngMinutesChanging(value);
                ReportPropertyChanging("LngMinutes");
                _LngMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngMinutes");
                OnLngMinutesChanged();
            }
        }
        private global::System.Int32 _LngMinutes;
        partial void OnLngMinutesChanging(global::System.Int32 value);
        partial void OnLngMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LngSeconds
        {
            get
            {
                return _LngSeconds;
            }
            set
            {
                OnLngSecondsChanging(value);
                ReportPropertyChanging("LngSeconds");
                _LngSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngSeconds");
                OnLngSecondsChanged();
            }
        }
        private global::System.Double _LngSeconds;
        partial void OnLngSecondsChanging(global::System.Double value);
        partial void OnLngSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServerTime
        {
            get
            {
                return _ServerTime;
            }
            set
            {
                OnServerTimeChanging(value);
                ReportPropertyChanging("ServerTime");
                _ServerTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerTime");
                OnServerTimeChanged();
            }
        }
        private global::System.DateTime _ServerTime;
        partial void OnServerTimeChanging(global::System.DateTime value);
        partial void OnServerTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LatitudeHeading
        {
            get
            {
                return _LatitudeHeading;
            }
            set
            {
                OnLatitudeHeadingChanging(value);
                ReportPropertyChanging("LatitudeHeading");
                _LatitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LatitudeHeading");
                OnLatitudeHeadingChanged();
            }
        }
        private global::System.String _LatitudeHeading;
        partial void OnLatitudeHeadingChanging(global::System.String value);
        partial void OnLatitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongitudeHeading
        {
            get
            {
                return _LongitudeHeading;
            }
            set
            {
                OnLongitudeHeadingChanging(value);
                ReportPropertyChanging("LongitudeHeading");
                _LongitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongitudeHeading");
                OnLongitudeHeadingChanged();
            }
        }
        private global::System.String _LongitudeHeading;
        partial void OnLongitudeHeadingChanging(global::System.String value);
        partial void OnLongitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Double _Speed;
        partial void OnSpeedChanging(global::System.Double value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdleTime
        {
            get
            {
                return _IdleTime;
            }
            set
            {
                OnIdleTimeChanging(value);
                ReportPropertyChanging("IdleTime");
                _IdleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdleTime");
                OnIdleTimeChanged();
            }
        }
        private global::System.Int64 _IdleTime;
        partial void OnIdleTimeChanging(global::System.Int64 value);
        partial void OnIdleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.Double _Direction;
        partial void OnDirectionChanging(global::System.Double value);
        partial void OnDirectionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GPSTrackerModel", Name="usp_LocationMessagesUpdate_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_LocationMessagesUpdate_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_LocationMessagesUpdate_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rawTextData">Initial value of the RawTextData property.</param>
        /// <param name="latDegrees">Initial value of the LatDegrees property.</param>
        /// <param name="latMinutes">Initial value of the LatMinutes property.</param>
        /// <param name="latSeconds">Initial value of the LatSeconds property.</param>
        /// <param name="lngDegrees">Initial value of the LngDegrees property.</param>
        /// <param name="lngMinutes">Initial value of the LngMinutes property.</param>
        /// <param name="lngSeconds">Initial value of the LngSeconds property.</param>
        /// <param name="serverTime">Initial value of the ServerTime property.</param>
        /// <param name="latitudeHeading">Initial value of the LatitudeHeading property.</param>
        /// <param name="longitudeHeading">Initial value of the LongitudeHeading property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        /// <param name="idleTime">Initial value of the IdleTime property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        public static usp_LocationMessagesUpdate_Result Createusp_LocationMessagesUpdate_Result(global::System.Int32 id, global::System.String rawTextData, global::System.Int32 latDegrees, global::System.Int32 latMinutes, global::System.Double latSeconds, global::System.Int32 lngDegrees, global::System.Int32 lngMinutes, global::System.Double lngSeconds, global::System.DateTime serverTime, global::System.String latitudeHeading, global::System.String longitudeHeading, global::System.Double speed, global::System.Int64 idleTime, global::System.Double direction)
        {
            usp_LocationMessagesUpdate_Result usp_LocationMessagesUpdate_Result = new usp_LocationMessagesUpdate_Result();
            usp_LocationMessagesUpdate_Result.Id = id;
            usp_LocationMessagesUpdate_Result.RawTextData = rawTextData;
            usp_LocationMessagesUpdate_Result.LatDegrees = latDegrees;
            usp_LocationMessagesUpdate_Result.LatMinutes = latMinutes;
            usp_LocationMessagesUpdate_Result.LatSeconds = latSeconds;
            usp_LocationMessagesUpdate_Result.LngDegrees = lngDegrees;
            usp_LocationMessagesUpdate_Result.LngMinutes = lngMinutes;
            usp_LocationMessagesUpdate_Result.LngSeconds = lngSeconds;
            usp_LocationMessagesUpdate_Result.ServerTime = serverTime;
            usp_LocationMessagesUpdate_Result.LatitudeHeading = latitudeHeading;
            usp_LocationMessagesUpdate_Result.LongitudeHeading = longitudeHeading;
            usp_LocationMessagesUpdate_Result.Speed = speed;
            usp_LocationMessagesUpdate_Result.IdleTime = idleTime;
            usp_LocationMessagesUpdate_Result.Direction = direction;
            return usp_LocationMessagesUpdate_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RawTextData
        {
            get
            {
                return _RawTextData;
            }
            set
            {
                OnRawTextDataChanging(value);
                ReportPropertyChanging("RawTextData");
                _RawTextData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RawTextData");
                OnRawTextDataChanged();
            }
        }
        private global::System.String _RawTextData;
        partial void OnRawTextDataChanging(global::System.String value);
        partial void OnRawTextDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatDegrees
        {
            get
            {
                return _LatDegrees;
            }
            set
            {
                OnLatDegreesChanging(value);
                ReportPropertyChanging("LatDegrees");
                _LatDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatDegrees");
                OnLatDegreesChanged();
            }
        }
        private global::System.Int32 _LatDegrees;
        partial void OnLatDegreesChanging(global::System.Int32 value);
        partial void OnLatDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LatMinutes
        {
            get
            {
                return _LatMinutes;
            }
            set
            {
                OnLatMinutesChanging(value);
                ReportPropertyChanging("LatMinutes");
                _LatMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatMinutes");
                OnLatMinutesChanged();
            }
        }
        private global::System.Int32 _LatMinutes;
        partial void OnLatMinutesChanging(global::System.Int32 value);
        partial void OnLatMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LatSeconds
        {
            get
            {
                return _LatSeconds;
            }
            set
            {
                OnLatSecondsChanging(value);
                ReportPropertyChanging("LatSeconds");
                _LatSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatSeconds");
                OnLatSecondsChanged();
            }
        }
        private global::System.Double _LatSeconds;
        partial void OnLatSecondsChanging(global::System.Double value);
        partial void OnLatSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngDegrees
        {
            get
            {
                return _LngDegrees;
            }
            set
            {
                OnLngDegreesChanging(value);
                ReportPropertyChanging("LngDegrees");
                _LngDegrees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngDegrees");
                OnLngDegreesChanged();
            }
        }
        private global::System.Int32 _LngDegrees;
        partial void OnLngDegreesChanging(global::System.Int32 value);
        partial void OnLngDegreesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LngMinutes
        {
            get
            {
                return _LngMinutes;
            }
            set
            {
                OnLngMinutesChanging(value);
                ReportPropertyChanging("LngMinutes");
                _LngMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngMinutes");
                OnLngMinutesChanged();
            }
        }
        private global::System.Int32 _LngMinutes;
        partial void OnLngMinutesChanging(global::System.Int32 value);
        partial void OnLngMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LngSeconds
        {
            get
            {
                return _LngSeconds;
            }
            set
            {
                OnLngSecondsChanging(value);
                ReportPropertyChanging("LngSeconds");
                _LngSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LngSeconds");
                OnLngSecondsChanged();
            }
        }
        private global::System.Double _LngSeconds;
        partial void OnLngSecondsChanging(global::System.Double value);
        partial void OnLngSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServerTime
        {
            get
            {
                return _ServerTime;
            }
            set
            {
                OnServerTimeChanging(value);
                ReportPropertyChanging("ServerTime");
                _ServerTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerTime");
                OnServerTimeChanged();
            }
        }
        private global::System.DateTime _ServerTime;
        partial void OnServerTimeChanging(global::System.DateTime value);
        partial void OnServerTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackerId
        {
            get
            {
                return _TrackerId;
            }
            set
            {
                OnTrackerIdChanging(value);
                ReportPropertyChanging("TrackerId");
                _TrackerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackerId");
                OnTrackerIdChanged();
            }
        }
        private global::System.String _TrackerId;
        partial void OnTrackerIdChanging(global::System.String value);
        partial void OnTrackerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LatitudeHeading
        {
            get
            {
                return _LatitudeHeading;
            }
            set
            {
                OnLatitudeHeadingChanging(value);
                ReportPropertyChanging("LatitudeHeading");
                _LatitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LatitudeHeading");
                OnLatitudeHeadingChanged();
            }
        }
        private global::System.String _LatitudeHeading;
        partial void OnLatitudeHeadingChanging(global::System.String value);
        partial void OnLatitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongitudeHeading
        {
            get
            {
                return _LongitudeHeading;
            }
            set
            {
                OnLongitudeHeadingChanging(value);
                ReportPropertyChanging("LongitudeHeading");
                _LongitudeHeading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongitudeHeading");
                OnLongitudeHeadingChanged();
            }
        }
        private global::System.String _LongitudeHeading;
        partial void OnLongitudeHeadingChanging(global::System.String value);
        partial void OnLongitudeHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Double _Speed;
        partial void OnSpeedChanging(global::System.Double value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdleTime
        {
            get
            {
                return _IdleTime;
            }
            set
            {
                OnIdleTimeChanging(value);
                ReportPropertyChanging("IdleTime");
                _IdleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdleTime");
                OnIdleTimeChanged();
            }
        }
        private global::System.Int64 _IdleTime;
        partial void OnIdleTimeChanging(global::System.Int64 value);
        partial void OnIdleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.Double _Direction;
        partial void OnDirectionChanging(global::System.Double value);
        partial void OnDirectionChanged();

        #endregion

    }

    #endregion

    
}
